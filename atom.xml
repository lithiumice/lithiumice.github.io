<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Codes of huaring</title>
  
  <subtitle>LITHIUMICE</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://hualin.online/"/>
  <updated>2019-09-14T07:01:51.038Z</updated>
  <id>https://hualin.online/</id>
  
  <author>
    <name>lithiumice</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Invoke Virtual Method ... on Null Reference</title>
    <link href="https://hualin.online/invoke-virtual-method-on-null-reference/"/>
    <id>https://hualin.online/invoke-virtual-method-on-null-reference/</id>
    <published>2019-09-14T06:59:23.000Z</published>
    <updated>2019-09-14T07:01:51.038Z</updated>
    
    <content type="html"><![CDATA[<p>在fragment中调用显示布局文件,需要先获得View对象,然后才能使用findViewById方法:</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">View <span class="attr">v</span> = inflater.inflate(R.layout.fragment, container, <span class="literal">false</span>);</span><br><span class="line"><span class="attr">listView</span> = v.findViewById(R.id.list_view);</span><br><span class="line"></span><br><span class="line">MyDialog <span class="attr">myDialog</span> = new MyDialog(getContext());</span><br><span class="line">myDialog.show();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;在fragment中调用显示布局文件,需要先获得View对象,然后才能使用findViewById方法:&lt;/p&gt;
&lt;figure class=&quot;highlight nix&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker 配置镜像</title>
    <link href="https://hualin.online/docker-pei-zhi-jing-xiang/"/>
    <id>https://hualin.online/docker-pei-zhi-jing-xiang/</id>
    <published>2019-09-14T06:38:53.000Z</published>
    <updated>2019-09-14T06:41:45.403Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用的加速地址"><a href="#常用的加速地址" class="headerlink" title="常用的加速地址"></a>常用的加速地址</h2><p><a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noopener">http://f1361db2.m.daocloud.io</a><br><a href="https://hub.daocloud.io/" target="_blank" rel="noopener">https://hub.daocloud.io/</a><br><a href="https://c.163.com/hub#/m/home/" target="_blank" rel="noopener">https://c.163.com/hub#/m/home/</a><br><a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a><br><a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a><br><a href="https://3laho3y3.mirror.aliyuncs.com" target="_blank" rel="noopener">https://3laho3y3.mirror.aliyuncs.com</a><br><a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noopener">http://f1361db2.m.daocloud.io</a><br><a href="https://mirror.ccs.tencentyun.com" target="_blank" rel="noopener">https://mirror.ccs.tencentyun.com</a></p><h2 id="使用shell命令配置"><a href="#使用shell命令配置" class="headerlink" title="使用shell命令配置"></a>使用shell命令配置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-'EOF'</span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors"["https://wl4i5g2z.mirror.aliyuncs.com"]</span><br><span class="line">"live-restore": true</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="直接修改service文件"><a href="#直接修改service文件" class="headerlink" title="直接修改service文件"></a>直接修改service文件</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">docker</span>.<span class="title">service</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在dockerd后面加参数</span></span><br><span class="line">ExecStart=<span class="regexp">/usr/bin</span><span class="regexp">/dockerd --registry-mirror=&lt;your accelerate address&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">sudo systemctl daemon-reload</span></span><br><span class="line"><span class="regexp">sudo systemctl restart docker</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;常用的加速地址&quot;&gt;&lt;a href=&quot;#常用的加速地址&quot; class=&quot;headerlink&quot; title=&quot;常用的加速地址&quot;&gt;&lt;/a&gt;常用的加速地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://f1361db2.m.daocloud.io&quot;
        
      
    
    </summary>
    
    
      <category term="docker linux" scheme="https://hualin.online/tags/docker-linux/"/>
    
  </entry>
  
  <entry>
    <title>Some Informations</title>
    <link href="https://hualin.online/some-informations/"/>
    <id>https://hualin.online/some-informations/</id>
    <published>2019-09-12T14:44:56.000Z</published>
    <updated>2019-09-14T06:57:41.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="百度云资料"><a href="#百度云资料" class="headerlink" title="百度云资料"></a>百度云资料</h2><p>个人整理的编程、大学资料、文学等的书籍<br>存在百度云里，可自行转存<br><a href="https://pan.baidu.com/s/1CPx9pbOlVSYdFYNxH3dTmA" target="_blank" rel="noopener">https://pan.baidu.com/s/1CPx9pbOlVSYdFYNxH3dTmA</a> 提取码: mc5d <a href="https://pan.baidu.com/s/1wAzs6cNdvPH34LnRC-8lKA" target="_blank" rel="noopener">https://pan.baidu.com/s/1wAzs6cNdvPH34LnRC-8lKA</a> 提取码: ty5e</p><h2 id="图标库"><a href="#图标库" class="headerlink" title="图标库"></a>图标库</h2><ul><li>阿里巴巴图标库 <a href="http://www.iconfont.cn" target="_blank" rel="noopener">http://www.iconfont.cn</a></li><li>icon8 <a href="https://icons8.com" target="_blank" rel="noopener">https://icons8.com</a></li><li>easyicon <a href="http://www.easyicon.net" target="_blank" rel="noopener">http://www.easyicon.net</a></li><li>iconpng <a href="http://iconpng.com" target="_blank" rel="noopener">http://iconpng.com</a></li><li>iconninja <a href="http://iconninja.com" target="_blank" rel="noopener">http://iconninja.com</a></li><li>Roundicons.com <a href="http://Roundicons.com" target="_blank" rel="noopener">http://Roundicons.com</a></li><li>undraw <a href="https://undraw.co/illustrations" target="_blank" rel="noopener">https://undraw.co/illustrations</a></li><li>instantlogosearch <a href="http://instantlogosearch.com/" target="_blank" rel="noopener">http://instantlogosearch.com/</a></li><li>logomaker <a href="https://logomakr.com/" target="_blank" rel="noopener">https://logomakr.com/</a></li><li>flaticon <a href="https://www.flaticon.com/" target="_blank" rel="noopener">https://www.flaticon.com/</a></li></ul><h2 id="搜索网站"><a href="#搜索网站" class="headerlink" title="搜索网站"></a>搜索网站</h2><ul><li><p>Bing 国际版：<a href="https://cn.bing.com/" target="_blank" rel="noopener">https://cn.bing.com/</a></p></li><li><p>DuckDuckGo：<a href="https://duckduckgo.com/" target="_blank" rel="noopener">https://duckduckgo.com/</a> 保护你的隐私</p></li><li><p>Stack Overflow：<a href="https://stackoverflow.com/" target="_blank" rel="noopener">https://stackoverflow.com/</a> 程序员的问题基本都可以在这里得到解决</p></li><li><p>Gitlogs：<a href="https://www.gitlogs.com/" target="_blank" rel="noopener">https://www.gitlogs.com/</a><br>Gitlogs 是专门针对 GitHub 项目的搜索引擎，我们通过他可以快速找到想要项目。</p></li><li><p>jiumo search 鸠摩搜书：<a href="https://www.jiumodiary.com/。" target="_blank" rel="noopener">https://www.jiumodiary.com/。</a><br>可以用来找一些技术文档手册，很多在百度网盘里。</p></li><li><p>Ebooke：<a href="https://ebookee.org/" target="_blank" rel="noopener">https://ebookee.org/</a><br>Ebookee 是一个基于互联网并提供免费电子图书下载的搜索引擎网站。</p></li><li><p>Iconfinder图标搜索：<a href="https://www.iconfinder.com/" target="_blank" rel="noopener">https://www.iconfinder.com/</a><br>用来查找 logo 图片。</p></li><li><p>TinEye：<a href="https://www.tineye.com" target="_blank" rel="noopener">https://www.tineye.com</a><br>用图片来检索图片，我们可以上传图片或输入图片的 URL 来检索。</p></li><li><p>SemanticScholar：<a href="https://www.semanticscholar.org/" target="_blank" rel="noopener">https://www.semanticscholar.org/</a><br>SemanticScholar 是一个免费学术搜索引擎，其检索结果来自于期刊、学术会议资料或者是学术机构的文献。</p></li><li><p>LibreStock：<a href="https://librestock.com/" target="_blank" rel="noopener">https://librestock.com/</a><br>LibreStock 上可以检索一些优质的高清图片。</p></li><li><p>CC Search：<a href="https://ccsearch.creativecommons.org/" target="_blank" rel="noopener">https://ccsearch.creativecommons.org/</a><br>CC Search 上搜索到的图片资源都是无版权的，我们可以免费的使用。</p></li><li><p>搜索论文等 <a href="https://libgen.is/" target="_blank" rel="noopener">https://libgen.is/</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;百度云资料&quot;&gt;&lt;a href=&quot;#百度云资料&quot; class=&quot;headerlink&quot; title=&quot;百度云资料&quot;&gt;&lt;/a&gt;百度云资料&lt;/h2&gt;&lt;p&gt;个人整理的编程、大学资料、文学等的书籍&lt;br&gt;存在百度云里，可自行转存&lt;br&gt;&lt;a
        
      
    
    </summary>
    
    
      <category term="资料" scheme="https://hualin.online/tags/%E8%B5%84%E6%96%99/"/>
    
  </entry>
  
  <entry>
    <title>Some Thoughts</title>
    <link href="https://hualin.online/some-thoughts/"/>
    <id>https://hualin.online/some-thoughts/</id>
    <published>2019-09-12T14:44:37.000Z</published>
    <updated>2019-09-12T14:45:37.004Z</updated>
    
    <content type="html"><![CDATA[<p>从很久以前开始，看完了一本书，一部动漫，一部电影，无论它的结局是喜悦还是悲伤的，我总会感到怅然若失，就像告别了一个挚友，经历了一段波澜起伏的人生，因而突发一种沧桑感，经历了一个不愿醒来的梦境，梦醒时却发觉自己仍在原地。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;从很久以前开始，看完了一本书，一部动漫，一部电影，无论它的结局是喜悦还是悲伤的，我总会感到怅然若失，就像告别了一个挚友，经历了一段波澜起伏的人生，因而突发一种沧桑感，经历了一个不愿醒来的梦境，梦醒时却发觉自己仍在原地。&lt;/p&gt;

        
      
    
    </summary>
    
    
      <category term="随感 杂感" scheme="https://hualin.online/tags/%E9%9A%8F%E6%84%9F-%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>Linux Skills</title>
    <link href="https://hualin.online/linux-skills/"/>
    <id>https://hualin.online/linux-skills/</id>
    <published>2019-09-12T14:31:18.000Z</published>
    <updated>2019-09-12T14:46:52.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用命令压缩图片"><a href="#使用命令压缩图片" class="headerlink" title="使用命令压缩图片"></a>使用命令压缩图片</h2><p>安装<code>sudo pacman -S imagemagick</code><br>支持JPG, BMP, PCX, GIF, PNG, TIFF, XPM和XWD等</p><p>1.转换格式<code>convert 1.jpg 1.png</code><br>2.-resize 1080x780<br>3.-sample 50%x50%<br>4.-rotate 272<br>5.-fill black -pointsize 60 -front helvetica -draw ‘hello’ //front use Ghostscript<br>5.-quality 0-100</p><h3 id="批量转换"><a href="#批量转换" class="headerlink" title="批量转换"></a>批量转换</h3><p><code>for %f in (*.jpg) do convert &quot;%f&quot; &quot;%~nf.png&quot;</code><br><code>for %f in (*.jpg) do convertv -quality 70 &quot;%f&quot; &quot;%~nf.jpg&quot;</code><br><code>convert -quality 70 *.jpg</code><br>composite加水印</p><h2 id="Linux-设置swap分区"><a href="#Linux-设置swap分区" class="headerlink" title="Linux 设置swap分区"></a>Linux 设置swap分区</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">dd </span><span class="string">if=</span>/<span class="string">dev/</span><span class="string">zero </span><span class="string">of=</span>/<span class="string">mnt/</span><span class="string">swap </span><span class="string">bs=</span><span class="string">1m </span><span class="string">count=</span><span class="string">1024 </span><span class="comment">#1G</span></span><br><span class="line"><span class="string">mkswap </span>/<span class="string">mnt/</span><span class="string">swap</span></span><br><span class="line"><span class="string">swapon </span>/<span class="string">mnt/</span><span class="string">swap</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">hostnamectl </span><span class="built_in">set-hostname</span> <span class="string">mail.</span><span class="string">ewomail.</span><span class="string">cn</span></span><br><span class="line"><span class="string">https:</span>//<span class="string">github.</span><span class="string">com/</span><span class="string">gyxuehu/</span><span class="string">EwoMail.</span><span class="string">git</span></span><br><span class="line"><span class="string">sh </span>./<span class="string">start.</span><span class="string">sh </span><span class="string">ewomail.</span><span class="string">cn </span>-f</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;使用命令压缩图片&quot;&gt;&lt;a href=&quot;#使用命令压缩图片&quot; class=&quot;headerlink&quot; title=&quot;使用命令压缩图片&quot;&gt;&lt;/a&gt;使用命令压缩图片&lt;/h2&gt;&lt;p&gt;安装&lt;code&gt;sudo pacman -S
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Watermark</title>
    <link href="https://hualin.online/watermark/"/>
    <id>https://hualin.online/watermark/</id>
    <published>2019-09-12T14:30:25.000Z</published>
    <updated>2019-09-12T14:31:02.423Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> glob</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageDraw</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> ImageFont</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">watermark</span><span class="params">(post_name)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> post_name == <span class="string">'all'</span>:</span><br><span class="line">        post_name = <span class="string">'*'</span></span><br><span class="line">    dir_name = <span class="string">'source/_posts/'</span> + post_name + <span class="string">'/*'</span></span><br><span class="line">    <span class="keyword">for</span> files <span class="keyword">in</span> glob.glob(dir_name):</span><br><span class="line">        im = Image.open(files)</span><br><span class="line">        <span class="keyword">if</span> len(im.getbands()) &lt; <span class="number">3</span>:</span><br><span class="line">            im = im.convert(<span class="string">'RGB'</span>)</span><br><span class="line">            print(files)</span><br><span class="line">        font = ImageFont.truetype(<span class="string">'STSONG.TTF'</span>, max(<span class="number">30</span>, int(im.size[<span class="number">1</span>] / <span class="number">20</span>)))</span><br><span class="line">        draw = ImageDraw.Draw(im)</span><br><span class="line">        draw.text((im.size[<span class="number">0</span>] / <span class="number">2</span>, im.size[<span class="number">1</span>] / <span class="number">2</span>),</span><br><span class="line">                  <span class="string">u'@lithiumice'</span>, fill=(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), font=font)</span><br><span class="line">        im.save(files)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">if</span> len(sys.argv) == <span class="number">2</span>:</span><br><span class="line">        watermark(sys.argv[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'[usage] &lt;input&gt;'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Install Flarum</title>
    <link href="https://hualin.online/install-flarum/"/>
    <id>https://hualin.online/install-flarum/</id>
    <published>2019-09-12T14:19:30.000Z</published>
    <updated>2019-09-12T14:19:44.556Z</updated>
    
    <content type="html"><![CDATA[<h2 id="test-flarum"><a href="#test-flarum" class="headerlink" title="test flarum"></a>test flarum</h2><p><a href="https://github.com/flarum/flarum.git" target="_blank" rel="noopener">github</a></p><p>1.install composer:<br><code>composer create-project flarum/flarum . --stability=beta</code><br>2.in order to use php</p><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> -y install gcc make autoconf libc-<span class="built_in">dev</span> pkg-config</span><br><span class="line">sudo apt-<span class="built_in">get</span> -y install php7<span class="number">.2</span>-<span class="built_in">dev</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> -y install libmcrypt-<span class="built_in">dev</span></span><br><span class="line">sudo pecl install mcrypt<span class="number">-1.0</span><span class="number">.2</span> <span class="comment">//for php&gt;7.3</span></span><br></pre></td></tr></table></figure><p>3.for arch<br><code>extra/php-sodium</code><br><code>php-set = extension=sodium</code>in /etc/php/php.ini</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;test-flarum&quot;&gt;&lt;a href=&quot;#test-flarum&quot; class=&quot;headerlink&quot; title=&quot;test flarum&quot;&gt;&lt;/a&gt;test flarum&lt;/h2&gt;&lt;p&gt;&lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sqmap Simple Intro</title>
    <link href="https://hualin.online/sqmap-simple-intro/"/>
    <id>https://hualin.online/sqmap-simple-intro/</id>
    <published>2019-09-12T14:14:36.000Z</published>
    <updated>2019-09-12T14:15:35.439Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">./sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://localhost:88/vulnerabilities/sqli/?id=1&amp;Submit=Submit#"</span> –cookie=mycookice<span class="selector-class">.txt</span> –batch</span><br><span class="line">./sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://192.168.3.64:8080/user/login?username=foo&amp;passwd=bar"</span> –batch -D sql_inject_demo -T t_user –<span class="attribute">columns</span></span><br><span class="line">./sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://192.168.3.64:8080/user/login?username=foo&amp;passwd=bar"</span> –batch -D sql_inject_demo -T t_user -C ‘username, passwd’ –dump</span><br><span class="line">./sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://192.168.3.64:8080/user/login?username=foo&amp;passwd=bar"</span> –batch -D mysql -T user -C ‘user, authentication_string’ –dump</span><br><span class="line">./sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://127.0.0.1/index.php?id=1"</span> –os-shell <span class="comment">// 获取远程主机的shell</span></span><br><span class="line">./sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://127.0.0.1/index.php?id=1"</span> –os-cmd=<span class="string">"whoami"</span> <span class="comment">// 执行远程主机的命令</span></span><br><span class="line">./sqlmap<span class="selector-class">.py</span> -u <span class="string">"http://127.0.0.1/index.php?id=1"</span> –is-dba <span class="comment">// 检查DBMS用户是否为DBA</span></span><br><span class="line">./sqlmap<span class="selector-class">.py</span> -g <span class="string">"inurl:php?id="</span> <span class="comment">// 通过google寻找url带有php?id=字段的地址</span></span><br></pre></td></tr></table></figure><p><strong>参数解析</strong><br>–batch –dbs //showdatabases<br>–batch –current-db //showcurrentdb<br>–batch -D database -T user -C varchar–tables //showtables<br>–columns //showcolumns<br>–tables //thesame</p><p><strong>以GET方式的cookice形式:</strong><br>_ga=GA1.1.1240902680.1567156892; portainer.datatable_text_filter_home_endpoints=; PHPSESSID=r56dp5dsqrc9rmjq74k85m4jd1; security=low</p><p><strong>POST注入方式:</strong><br>$ python sqlmap.py -r header.txt –dbs<br>// -r是从一个文件中载入HTTP请求<br>// 其余都与GET一样将-u部分改成-r header.txt<br>从chrome保存下来的request header:<br>POST /index.php HTTP/1.1 …</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h2&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Use Nvm</title>
    <link href="https://hualin.online/use-nvm/"/>
    <id>https://hualin.online/use-nvm/</id>
    <published>2019-09-11T13:59:05.000Z</published>
    <updated>2019-09-14T09:59:15.483Z</updated>
    
    <content type="html"><![CDATA[<h3 id="先卸载系统的node"><a href="#先卸载系统的node" class="headerlink" title="先卸载系统的node"></a>先卸载系统的node</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo rm /usr/local/bin/npm</span><br><span class="line">sudo rm /usr/local/share/man/man1/node.1</span><br><span class="line">sudo rm /usr/local/lib/dtrace/node.d</span><br><span class="line">sudo rm -rf ~/.npm</span><br><span class="line">sudo rm -rf ~/.node-gyp</span><br><span class="line">sudo rm /opt/local/bin/node</span><br><span class="line">sudo rm /opt/local/include/node</span><br><span class="line">sudo rm -rf /opt/local/lib/node_modules</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nvm install <span class="number">4.2</span><span class="number">.2</span></span><br><span class="line">nvm ls-remote</span><br><span class="line">nvm use <span class="number">4.2</span><span class="number">.2</span></span><br><span class="line">nvm use node <span class="comment">//newest</span></span><br><span class="line">nvm alias awesome-version <span class="number">4.2</span><span class="number">.2</span></span><br><span class="line">nvm run <span class="number">4.2</span><span class="number">.2</span> --version</span><br></pre></td></tr></table></figure><p>在当前终端的子进程中运行特定版本的 Node<br><code>nvm exec 4.2.2 node --version</code></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h3 id=&quot;先卸载系统的node&quot;&gt;&lt;a href=&quot;#先卸载系统的node&quot; class=&quot;headerlink&quot; title=&quot;先卸载系统的node&quot;&gt;&lt;/a&gt;先卸载系统的node&lt;/h3&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Install Opencv on Linux</title>
    <link href="https://hualin.online/install-opencv-on-linux/"/>
    <id>https://hualin.online/install-opencv-on-linux/</id>
    <published>2019-09-11T13:57:53.000Z</published>
    <updated>2019-09-11T14:02:42.292Z</updated>
    
    <content type="html"><![CDATA[<h1 id="simple-guide-to-install-opencv-on-ubuntu"><a href="#simple-guide-to-install-opencv-on-ubuntu" class="headerlink" title="simple guide to install opencv on ubuntu"></a>simple guide to install opencv on ubuntu</h1><h2 id="system-depandencies"><a href="#system-depandencies" class="headerlink" title="system depandencies"></a>system depandencies</h2><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install build-essential</span><br><span class="line">sudo apt-<span class="built_in">get</span> install cmake git libgtk2<span class="number">.0</span>-<span class="built_in">dev</span> pkg-config libavcodec-<span class="built_in">dev</span> libavformat-<span class="built_in">dev</span> libswscale-<span class="built_in">dev</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install python-<span class="built_in">dev</span> python-numpy libtbb2 libtbb-<span class="built_in">dev</span> libjpeg-<span class="built_in">dev</span> libpng-<span class="built_in">dev</span> libtiff-<span class="built_in">dev</span> libjasper-<span class="built_in">dev</span> libdc1394<span class="number">-22</span>-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure><h2 id="build-opencv"><a href="#build-opencv" class="headerlink" title="build opencv"></a>build opencv</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/opencv/opencv.git</span><br><span class="line">git clone https://github.com/opencv/opencv_contrib.git</span><br><span class="line">cd opencv</span><br><span class="line">mkdir build &amp;&amp; cd build</span><br><span class="line">cmake -D CMAKE_BUILD_TYPE=<span class="keyword">Release</span> -D CMAKE_INSTALL_PREFIX=/usr/<span class="keyword">local</span> ..</span><br><span class="line">cmake -DCMAKE_INSTALL_PREFIX=/usr</span><br><span class="line">-DCMAKE_BUILD_TYPE=<span class="keyword">Release</span></span><br><span class="line">-DENABLE_CXX11=<span class="keyword">ON</span></span><br><span class="line">-DBUILD_PERF_TESTS=<span class="keyword">OFF</span></span><br><span class="line">-DWITH_XINE=<span class="keyword">ON</span></span><br><span class="line">-DBUILD_TESTS=<span class="keyword">OFF</span></span><br><span class="line">-DENABLE_PRECOMPILED_HEADERS=<span class="keyword">OFF</span></span><br><span class="line">-DCMAKE_SKIP_RPATH=<span class="keyword">ON</span></span><br><span class="line">-DBUILD_WITH_DEBUG_INFO=<span class="keyword">OFF</span></span><br><span class="line">-DBUILD_SHARED_LIBS=<span class="keyword">OFF</span></span><br><span class="line">-Wno-dev .. &amp;&amp; make</span><br><span class="line"></span><br><span class="line">cd opencv/<span class="keyword">build</span>/doc/</span><br><span class="line">make -j7 html_docs</span><br><span class="line">sudo make <span class="keyword">install</span></span><br><span class="line">git <span class="keyword">clone</span> https://github.com/opencv/opencv_extra.git</span><br><span class="line">pkg-config –modversion opencv</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## Description of some parameters</span></span><br><span class="line">build type: CMAKE_BUILD_TYPE=ReleaseDebug</span><br><span class="line">to build <span class="keyword">with</span> modules <span class="keyword">from</span> opencv_contrib <span class="keyword">set</span> OPENCV_EXTRA_MODULES_PATH <span class="keyword">to</span> &lt;<span class="keyword">path</span> <span class="keyword">to</span> opencv_contrib/modules/&gt;</span><br><span class="line"><span class="keyword">set</span> BUILD_DOCS <span class="keyword">for</span> building documents</span><br><span class="line"><span class="keyword">set</span> BUILD_EXAMPLES <span class="keyword">to</span> <span class="keyword">build</span> <span class="keyword">all</span> examples</span><br><span class="line">[optional] Building python. <span class="keyword">Set</span> the <span class="keyword">following</span> python <span class="keyword">parameters</span>:</span><br><span class="line">PYTHON2(<span class="number">3</span>)_EXECUTABLE = &lt;<span class="keyword">path</span> <span class="keyword">to</span> python&gt;</span><br><span class="line">PYTHON_INCLUDE_DIR = /usr/<span class="keyword">include</span>/python&lt;<span class="keyword">version</span>&gt;</span><br><span class="line">PYTHON_INCLUDE_DIR2 = /usr/<span class="keyword">include</span>/x86_64-linux-gnu/python&lt;<span class="keyword">version</span>&gt;</span><br><span class="line">PYTHON_LIBRARY = /usr/lib/x86_64-linux-gnu/libpython&lt;<span class="keyword">version</span>&gt;.so</span><br><span class="line">PYTHON2(<span class="number">3</span>)_NUMPY_INCLUDE_DIRS = /usr/lib/python&lt;<span class="keyword">version</span>&gt;/dist-packages/numpy/core/<span class="keyword">include</span>/</span><br><span class="line">[optional] Building java.</span><br><span class="line">Unset parameter: BUILD_SHARED_LIBS</span><br><span class="line">It <span class="keyword">is</span> useful also <span class="keyword">to</span> unset BUILD_EXAMPLES, BUILD_TESTS, BUILD_PERF_TESTS – <span class="keyword">as</span> they <span class="keyword">all</span> will be statically linked <span class="keyword">with</span> OpenCV <span class="keyword">and</span> can take a lot <span class="keyword">of</span> memory.</span><br></pre></td></tr></table></figure><h2 id="test-your-opencv"><a href="#test-your-opencv" class="headerlink" title="test your opencv"></a>test your opencv</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">g++ -o main <span class="regexp">/home/</span>lithium<span class="regexp">/Documents/</span>opencv-lena.cpp `pkg-config opencv –cflags –libs`</span><br><span class="line">sudo apt-get install libopencv-dev</span><br><span class="line"></span><br><span class="line"><span class="comment">## uninstall opencv</span></span><br><span class="line">sudo rm -r <span class="regexp">/usr/</span>local<span class="regexp">/include/</span>opencv2 <span class="regexp">/usr/</span>local<span class="regexp">/include/</span>opencv <span class="regexp">/usr/i</span>nclude<span class="regexp">/opencv /u</span>sr<span class="regexp">/include/</span>opencv2 <span class="regexp">/usr/</span>local<span class="regexp">/share/</span>opencv <span class="regexp">/usr/</span>local<span class="regexp">/share/</span>OpenCV <span class="regexp">/usr/</span>share<span class="regexp">/opencv /u</span>sr<span class="regexp">/share/</span>OpenCV <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>opencv* <span class="regexp">/usr/</span>local<span class="regexp">/lib/</span>libopencv*</span><br><span class="line">sudo apt-get –purge remove opencv-doc opencv-data python-opencv</span><br></pre></td></tr></table></figure><h2 id="config-PATH"><a href="#config-PATH" class="headerlink" title="config PATH"></a>config PATH</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CPLUS_INCLUDE_PATH=<span class="variable">$CPLUS_INCLUDE_PATH</span><span class="symbol">:/usr/include/libxml2</span><span class="symbol">:/usr/local/include/opencv4/opencv2</span></span><br><span class="line">export CPLUS_INCLUDE_PATH</span><br><span class="line">C_INCLUDE_PATH=<span class="regexp">/usr/include</span><span class="regexp">/libxml2:/usr</span><span class="regexp">/local/include</span><span class="regexp">/opencv4/opencv</span>2/</span><br><span class="line">export C_INCLUDE_PATH</span><br><span class="line">LD_LIBRARY_PATH=<span class="variable">$LD_LIBRARY_PATH</span><span class="symbol">:/MyLib</span></span><br><span class="line">export LD_LIBRARY_PATH</span><br><span class="line">LIBRARY_PATH=<span class="variable">$LIBRARY_PATH</span><span class="symbol">:/MyLib</span></span><br><span class="line">export LIBRARY_PATH</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h1 id=&quot;simple-guide-to-install-opencv-on-ubuntu&quot;&gt;&lt;a href=&quot;#simple-guide-to-install-opencv-on-ubuntu&quot; class=&quot;headerlink&quot; title=&quot;simple
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache-Php-Config</title>
    <link href="https://hualin.online/apache-php-config/"/>
    <id>https://hualin.online/apache-php-config/</id>
    <published>2019-09-10T13:12:03.000Z</published>
    <updated>2019-09-10T13:24:52.532Z</updated>
    
    <content type="html"><![CDATA[<p>vim /usr/local/apache2/conf/httpd.conf<br><directory><br>    Options FollowSymLinks<br>    AllowOverride None<br>    Order deny,allow<br>    Deny from all<br></directory></p><p>AddType application/x-gzip .gz .tgz<br>在其下面添加：<br>ddType application/x-httpd-php .php</p><ifmodule dir_module>    DirectoryIndex index.html//DirectoryIndex index.html index.htm index.php</ifmodule><p>ServerName localhost:80<br>/usr/local/apache2/bin/apachectl -t</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;vim /usr/local/apache2/conf/httpd.conf&lt;br&gt;&lt;directory&gt;&lt;br&gt;    Options FollowSymLinks&lt;br&gt;    AllowOverride None&lt;br&gt;    Order
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Install Nodebb</title>
    <link href="https://hualin.online/install-nodebb/"/>
    <id>https://hualin.online/install-nodebb/</id>
    <published>2019-09-10T06:12:31.000Z</published>
    <updated>2019-09-12T15:56:59.458Z</updated>
    
    <content type="html"><![CDATA[<h2 id="For-Centos"><a href="#For-Centos" class="headerlink" title="For Centos"></a>For Centos</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> epel-<span class="keyword">release</span> //<span class="keyword">for</span> centos <span class="number">7</span></span><br><span class="line">yum -y groupinstall <span class="string">"Development Tools"</span></span><br><span class="line">yum -y <span class="keyword">install</span> git redis ImageMagick npm</span><br><span class="line"></span><br><span class="line">curl https://raw.githubusercontent.com/creationix/nvm/v0<span class="number">.13</span><span class="number">.1</span>/install.sh | bash</span><br><span class="line">$ <span class="keyword">export</span> NVM_DIR=<span class="string">"$HOME/.nvm"</span></span><br><span class="line">[ -s <span class="string">"$NVM_DIR/nvm.sh"</span> ] &amp;&amp; . <span class="string">"$NVM_DIR/nvm.sh"</span></span><br><span class="line"><span class="keyword">source</span> ~/.bash_profile</span><br><span class="line">nvm <span class="keyword">list</span>-remote</span><br><span class="line">nvm <span class="keyword">install</span> v0<span class="number">.12</span><span class="number">.7</span> <span class="comment"># as of this writing check the result of the list-remote to see all choices</span></span><br><span class="line">//<span class="keyword">use</span> v6<span class="number">.9</span><span class="number">.5</span> <span class="keyword">as</span> stable</span><br><span class="line">$ <span class="keyword">export</span> NVM_NODEJS_ORG_MIRROR=<span class="keyword">http</span>://npm.taobao.org/mirrors/node</span><br><span class="line">$ <span class="keyword">export</span> NVM_IOJS_ORG_MIRROR=<span class="keyword">http</span>://npm.taobao.org/mirrors/iojs</span><br><span class="line">sudo npm config <span class="keyword">set</span> registry <span class="keyword">http</span>://registry.npm.taobao.org/</span><br><span class="line"></span><br><span class="line">systemctl <span class="keyword">start</span> redis</span><br><span class="line">systemctl <span class="keyword">enable</span> redis</span><br><span class="line"></span><br><span class="line">cd /<span class="keyword">path</span>/<span class="keyword">to</span>/nodebb/<span class="keyword">install</span>/location</span><br><span class="line">git <span class="keyword">clone</span> -b v1<span class="number">.10</span>.x https://github.com/NodeBB/NodeBB nodebb</span><br><span class="line">cd nodebb</span><br><span class="line">./nodebb setup</span><br><span class="line">firewall-cmd <span class="comment">--zone=public --add-port=4567/tcp --permanent</span></span><br><span class="line">//<span class="keyword">or</span>  <span class="comment">--add-service=http</span></span><br><span class="line">firewall-cmd <span class="comment">--reload</span></span><br><span class="line">./nodebb <span class="keyword">start</span></span><br></pre></td></tr></table></figure><p>if you come across <strong>open ‘/opt/nodebb/node_modules/sharp/</strong>,then try:</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">./nodebb <span class="built_in">setup</span></span><br></pre></td></tr></table></figure><h2 id="For-arch"><a href="#For-arch" class="headerlink" title="For arch"></a>For arch</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S git nodejs npm redis imagemagick icu</span><br><span class="line">git clone -<span class="selector-tag">b</span> v1.<span class="number">10</span><span class="selector-class">.x</span> https:<span class="comment">//github.com/NodeBB/NodeBB.git nodebb</span></span><br><span class="line">cd nodebb</span><br><span class="line">./nodebb setup</span><br><span class="line">./nodebb start</span><br></pre></td></tr></table></figure><h2 id="proxy-reverse"><a href="#proxy-reverse" class="headerlink" title="proxy reverse"></a>proxy reverse</h2> <figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">in httd.conf</span><br><span class="line">LoadModule proxy_module /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">apache2</span>/<span class="title">modules</span>/<span class="title">mod_proxy</span>.<span class="title">so</span></span></span><br><span class="line">LoadModule proxy_http_module /usr/<span class="class"><span class="keyword">lib</span>/<span class="title">apache2</span>/<span class="title">modules</span>/<span class="title">mod_proxy_http</span>.<span class="title">so</span></span></span><br><span class="line">&lt;VirtualHost *:<span class="number">80</span>&gt;     </span><br><span class="line">        DocumentRoot <span class="string">"/home/test/tomcat/webapps/ROOT”     </span></span><br><span class="line"><span class="string">        ServerName test.test.test     </span></span><br><span class="line"><span class="string">        ProxyPass /    http://127.0.0.1:8080/</span></span><br><span class="line"><span class="string">        ProxyPassReverse /   http://127.0.0.1:8080/</span></span><br><span class="line"><span class="string">&lt;/VirtualHost&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">in apache2.configuration</span></span><br><span class="line"><span class="string">Include ports.conf</span></span><br><span class="line"><span class="string">Include httpd.conf</span></span><br><span class="line"><span class="string">ServerName 127.0.0.1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">sudo apache2ctl -k stop</span></span><br><span class="line"><span class="string">sudo apache2ctl -k start</span></span><br></pre></td></tr></table></figure><h2 id="nginx-ProxyPassReverse"><a href="#nginx-ProxyPassReverse" class="headerlink" title="nginx ProxyPassReverse"></a>nginx ProxyPassReverse</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Insert the below lines into the location / &#123;&#125; segment:</span><br><span class="line">  ##########################################</span><br><span class="line">  server &#123;</span><br><span class="line">      listen <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">      server_name www.xxx.com; # 你的域名</span><br><span class="line"></span><br><span class="line">     location / &#123;</span><br><span class="line">          proxy_set_header X-<span class="built_in">Real</span>-IP $remote_addr;</span><br><span class="line">          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">          proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">          proxy_set_header Host $http_host;</span><br><span class="line">          proxy_set_header X-NginX-Proxy true;</span><br><span class="line"></span><br><span class="line">          proxy_pass http:<span class="comment">//127.0.0.1:4567;</span></span><br><span class="line">          proxy_http_version <span class="number">1.1</span>;</span><br><span class="line">          proxy_set_header X-<span class="built_in">Real</span>-IP $remote_addr;</span><br><span class="line">          proxy_set_header Host $host;</span><br><span class="line">          proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">          proxy_set_header Connection <span class="string">'upgrade'</span>;</span><br><span class="line">          proxy_cache_bypass $http_upgrade;</span><br><span class="line">          proxy_redirect off;</span><br><span class="line"></span><br><span class="line">          # Socket.IO Support</span><br><span class="line">          proxy_http_version <span class="number">1.1</span>;</span><br><span class="line">          proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">          proxy_set_header Connection <span class="string">"upgrade"</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      # 配置 <span class="number">502</span> 页? 参考: 高级 - 配置 Nginx</span><br><span class="line">  &#125;</span><br><span class="line">  ##########################################</span><br></pre></td></tr></table></figure><h2 id="use-forever-to-manage-NodeBB"><a href="#use-forever-to-manage-NodeBB" class="headerlink" title="use forever to manage NodeBB"></a>use <strong>forever</strong> to manage NodeBB</h2><p>npm install forever -g<br> forever start app.js</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;For-Centos&quot;&gt;&lt;a href=&quot;#For-Centos&quot; class=&quot;headerlink&quot; title=&quot;For Centos&quot;&gt;&lt;/a&gt;For Centos&lt;/h2&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Using Hexo</title>
    <link href="https://hualin.online/using-hexo/"/>
    <id>https://hualin.online/using-hexo/</id>
    <published>2019-09-10T04:57:01.000Z</published>
    <updated>2019-09-12T14:22:34.628Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h2 id="在本机上安装"><a href="#在本机上安装" class="headerlink" title="在本机上安装"></a>在本机上安装</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -S gem <span class="keyword">bundle</span></span><br><span class="line"><span class="keyword">sudo </span>gem <span class="keyword">install </span><span class="keyword">bundler </span><span class="keyword">jekyll</span></span><br><span class="line"><span class="keyword">bundle </span>exec <span class="keyword">jekyll </span>serve</span><br><span class="line">npm <span class="keyword">install </span>hexo</span><br><span class="line">hexo init <span class="keyword">blog </span>&amp;amp<span class="comment">;&amp;amp; cd blog</span></span><br><span class="line">npm i hexo-generator-<span class="keyword">json-content </span>--save &amp;amp<span class="comment">;&amp;amp; npm i hexo-wordcount --save</span></span><br></pre></td></tr></table></figure></li><li><h2 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h2><p>获取 Archer 主题：<br>git clone “<a href="https://github.com/fi3ework/hexo-theme-archer.git&quot;" target="_blank" rel="noopener">https://github.com/fi3ework/hexo-theme-archer.git&quot;</a> themes/archer<br>覆盖 Hexo 默认配置文件：<br>cp ../hexo.config.yml _config.yml<br>覆盖 Archer 主题默认配置文件：<br>cp ../hexo.config-theme.archer.yml themes/archer/_config.yml<br>加入定制的页面布局：<br>cp ../post-footer.ejs themes/archer/layout/_partial/post-footer.ejs</p></li><li><h2 id="安装-Hexo-站点："><a href="#安装-Hexo-站点：" class="headerlink" title="安装 Hexo 站点："></a>安装 Hexo 站点：</h2><p>npm install<br>使用hexo new [layout] &lt;title&gt;命令来创建一个文章，也可以手动把写好的文章拷贝到源目录(/docs/_posts/)中。<br>执行 hexo generate</p></li></ul><ul><li><h2 id="git-and-hexo"><a href="#git-and-hexo" class="headerlink" title="git and hexo"></a>git and hexo</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">git config --<span class="keyword">global</span> core.autocrlf false</span><br><span class="line">useradd git</span><br><span class="line">passwd git <span class="comment">// 设置密码</span></span><br><span class="line"><span class="keyword">su</span> git <span class="comment">// 这步很重要，不切换用户后面会很麻烦</span></span><br><span class="line"><span class="keyword">cd</span> /home/git/</span><br><span class="line"><span class="keyword">mkdir</span> -p projects/blog <span class="comment">// 项目存在的真实目录</span></span><br><span class="line"><span class="keyword">mkdir</span> repos &amp;&amp; <span class="keyword">cd</span> repos</span><br><span class="line">git init --bare blog.git <span class="comment">// 创建一个裸露的仓库</span></span><br><span class="line"><span class="keyword">cd</span> blog.git/hooks</span><br><span class="line">vi <span class="keyword">post</span>-receive <span class="comment">// 创建hook钩子函数，输入了内容如下（原理可以参考上面的链接）</span></span><br><span class="line">#!/bin/<span class="keyword">sh</span></span><br><span class="line">git --work-tree=/home/git/projects/blog --git-<span class="keyword">dir</span>=/home/git/repos/blog.git checkout -<span class="built_in">f</span></span><br><span class="line">chmod +x <span class="keyword">post</span>-receive</span><br><span class="line"><span class="keyword">exit</span> <span class="comment">// 退出到 root 登录</span></span><br><span class="line">chown -R git:git /home/git/repos/blog.git <span class="comment">// 添加权限</span></span><br><span class="line"><span class="keyword">cat</span> /etc/shells <span class="comment">// 查看`git-shell`是否在登录方式里面，有则跳过</span></span><br><span class="line"><span class="keyword">which</span> git-<span class="keyword">shell</span> <span class="comment">// 查看是否安装</span></span><br><span class="line">vi /etc/shells</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone git<span class="variable">@47</span>.<span class="number">102.85</span>.<span class="number">59</span><span class="symbol">:/home/git/repos/blog</span>.git</span><br><span class="line">ssh-copy-id -i /home/lithium/.ssh/id_rsa.pub git<span class="variable">@47</span>.<span class="number">102.85</span>.<span class="number">59</span></span><br><span class="line">ssh git<span class="variable">@47</span>.<span class="number">102.85</span>.<span class="number">59</span></span><br></pre></td></tr></table></figure><ul><li><h2 id="动漫图片"><a href="#动漫图片" class="headerlink" title="动漫图片"></a>动漫图片</h2>npm install –save hexo-helper-live2d<br>npm install –save live2d-widget-model-shizuku</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;在本机上安装&quot;&gt;&lt;a href=&quot;#在本机上安装&quot; class=&quot;headerlink&quot; title=&quot;在本机上安装&quot;&gt;&lt;/a&gt;在本机上安装&lt;/h2&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
    
      <category term="Codes" scheme="https://hualin.online/tags/Codes/"/>
    
  </entry>
  
  <entry>
    <title>Docker Command Translation</title>
    <link href="https://hualin.online/docker-command-translation/"/>
    <id>https://hualin.online/docker-command-translation/</id>
    <published>2019-09-08T14:06:28.000Z</published>
    <updated>2019-09-12T14:14:02.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="useful-command"><a href="#useful-command" class="headerlink" title="useful command"></a>useful command</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p <span class="number">5000</span>:<span class="number">5000</span> training/webapp python app.py</span><br><span class="line">docker logs -f bf08b7f2cd89(ID)</span><br><span class="line">docker run -it <span class="string">ubuntu:</span><span class="number">15.10</span> <span class="regexp">/bin/</span>bash</span><br><span class="line">-<span class="string">f:</span> 让 docker logs 像使用 tail -f 一样来输出容器内部的标准输出。</span><br><span class="line">-<span class="string">d:</span>让容器在后台运行。</span><br><span class="line">-<span class="string">P:</span>将容器内部使用的网络端口映射到我们使用的主机上。</span><br><span class="line">docker top wizardly_chandrasekhar</span><br><span class="line">docker inspect wizardly_chandrasekhar</span><br><span class="line">docker ps -l 查询最后一次创建的容器</span><br><span class="line">docker images <span class="comment">//like list images</span></span><br><span class="line">docker commit -m=&amp;quot;has update&amp;quot; -a=&amp;quot;author&amp;quot; ID runoob/<span class="string">ubuntu:</span>v2</span><br><span class="line">docker top wizardly_chandrasekhar</span><br><span class="line">docker inspect wizardly_chandrasekhar</span><br><span class="line">docker run -d -p <span class="number">5000</span>:<span class="number">5000</span> training/webapp python app.py</span><br><span class="line">docker logs -f bf08b7f2cd89(ID)</span><br><span class="line">docker run -it <span class="string">ubuntu:</span><span class="number">15.10</span> <span class="regexp">/bin/</span>bash</span><br><span class="line">-<span class="string">f:</span> 让 docker logs 像使用 tail -f 一样来输出容器内部的标准输出。</span><br><span class="line">-<span class="string">d:</span>让容器在后台运行。</span><br><span class="line">-<span class="string">P:</span>将容器内部使用的网络端口映射到我们使用的主机上。</span><br></pre></td></tr></table></figure><h2 id="main-command"><a href="#main-command" class="headerlink" title="main command"></a>main command</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">attach    Attach to a running container //连接到一个正在运行的容器</span><br><span class="line">build     Build an image from a Dockerfile //构建一个镜像</span><br><span class="line"><span class="keyword">commit</span>    <span class="keyword">Create</span> a <span class="keyword">new</span> image <span class="keyword">from</span> a <span class="keyword">container</span><span class="string">'s changes //更新镜像</span></span><br><span class="line"><span class="string">cp        Copy files/folders between a container and the local filesystem //复制</span></span><br><span class="line"><span class="string">create    Create a new container</span></span><br><span class="line"><span class="string">diff      Inspect changes on a container'</span>s filesystem //检查容器文件系统的变化</span><br><span class="line"><span class="keyword">events</span>    <span class="keyword">Get</span> <span class="built_in">real</span> <span class="built_in">time</span> <span class="keyword">events</span> <span class="keyword">from</span> the <span class="keyword">server</span></span><br><span class="line">exec      Run a command <span class="keyword">in</span> a running <span class="keyword">container</span>//在容器中运行命令</span><br><span class="line"><span class="keyword">export</span>    <span class="keyword">Export</span> a <span class="keyword">container</span><span class="string">'s filesystem as a tar archive //以tar格式导出容器系统</span></span><br><span class="line"><span class="string">history   Show the history of an image //历史</span></span><br><span class="line"><span class="string">images    List images</span></span><br><span class="line"><span class="string">import    Import the contents from a tarball to create a filesystem image //于export相反</span></span><br><span class="line"><span class="string">info      Display system-wide information //显示主机信息</span></span><br><span class="line"><span class="string">inspect   Return low-level information on a container, image or task</span></span><br><span class="line"><span class="string">kill      Kill one or more ru</span></span><br><span class="line"><span class="string">attach    Attach to a running container //连接到一个正在运行的容器</span></span><br><span class="line"><span class="string">build     Build an image from a Dockerfile //构建一个镜像</span></span><br><span class="line"><span class="string">commit    Create a new image from a container'</span>s changes //更新镜像</span><br><span class="line">cp        Copy files/folders <span class="keyword">between</span> a <span class="keyword">container</span> <span class="keyword">and</span> the <span class="keyword">local</span> filesystem //复制</span><br><span class="line"><span class="keyword">create</span>    <span class="keyword">Create</span> a <span class="keyword">new</span> <span class="keyword">container</span></span><br><span class="line">diff      Inspect changes <span class="keyword">on</span> a <span class="keyword">container</span><span class="string">'s filesystem //检查容器文件系统的变化</span></span><br><span class="line"><span class="string">events    Get real time events from the server</span></span><br><span class="line"><span class="string">exec      Run a command in a running container//在容器中运行命令</span></span><br><span class="line"><span class="string">export    Export a container'</span>s filesystem <span class="keyword">as</span> a tar <span class="keyword">archive</span> //以tar格式导出容器系统</span><br><span class="line">history   <span class="keyword">Show</span> the history <span class="keyword">of</span> an image //历史</span><br><span class="line">images    <span class="keyword">List</span> images</span><br><span class="line"><span class="keyword">import</span>    <span class="keyword">Import</span> the contentsnning containers //杀死</span><br><span class="line"><span class="keyword">load</span>      <span class="keyword">Load</span> an image <span class="keyword">from</span> a tar <span class="keyword">archive</span> <span class="keyword">or</span> STDIN //加载文件系统</span><br><span class="line">login     <span class="keyword">Log</span> <span class="keyword">in</span> <span class="keyword">to</span> a Docker registry. //登录docker.org</span><br><span class="line">logout    <span class="keyword">Log</span> <span class="keyword">out</span> <span class="keyword">from</span> a Docker registry.</span><br><span class="line"><span class="keyword">logs</span>      <span class="keyword">Fetch</span> the <span class="keyword">logs</span> <span class="keyword">of</span> a <span class="keyword">container</span></span><br><span class="line">network   Manage Docker networks</span><br><span class="line">node      Manage Docker Swarm nodes //docker集群</span><br><span class="line">pause     Pause <span class="keyword">all</span> processes <span class="keyword">within</span> one <span class="keyword">or</span> more containers //暂停</span><br><span class="line">port      <span class="keyword">List</span> port mappings <span class="keyword">or</span> a specific <span class="keyword">mapping</span> <span class="keyword">for</span> the <span class="keyword">container</span> //显示容器端口映射</span><br><span class="line">ps        <span class="keyword">List</span> containers</span><br><span class="line">pull      Pull an image <span class="keyword">or</span> a repository <span class="keyword">from</span> a registry</span><br><span class="line">push      Push an image <span class="keyword">or</span> a repository <span class="keyword">to</span> a registry</span><br><span class="line"><span class="keyword">rename</span>    <span class="keyword">Rename</span> a <span class="keyword">container</span></span><br><span class="line">restart   Restart a <span class="keyword">container</span></span><br><span class="line">rm        Remove one <span class="keyword">or</span> more containers</span><br><span class="line">rmi       Remove one <span class="keyword">or</span> more images</span><br><span class="line">run       Run a command <span class="keyword">in</span> a <span class="keyword">new</span> <span class="keyword">container</span></span><br><span class="line"><span class="keyword">save</span>      <span class="keyword">Save</span> one <span class="keyword">or</span> more images <span class="keyword">to</span> a tar <span class="keyword">archive</span> (streamed <span class="keyword">to</span> STDOUT <span class="keyword">by</span> <span class="keyword">default</span>)</span><br><span class="line"><span class="keyword">search</span>    <span class="keyword">Search</span> the Docker Hub <span class="keyword">for</span> images</span><br><span class="line">service   Manage Docker services</span><br><span class="line"><span class="keyword">start</span>     <span class="keyword">Start</span> one <span class="keyword">or</span> more stopped containers</span><br><span class="line">stats     Display a live stream <span class="keyword">of</span> <span class="keyword">container</span>(s) <span class="keyword">resource</span> <span class="keyword">usage</span> <span class="keyword">statistics</span></span><br><span class="line"><span class="keyword">stop</span>      <span class="keyword">Stop</span> one <span class="keyword">or</span> more running containers</span><br><span class="line">swarm     Manage Docker Swarm</span><br><span class="line">tag       Tag an image <span class="keyword">into</span> a repository</span><br><span class="line">top       Display the running processes <span class="keyword">of</span> a <span class="keyword">container</span> //在容器中运行top</span><br><span class="line">unpause   Unpause <span class="keyword">all</span> processes <span class="keyword">within</span> one <span class="keyword">or</span> more containers</span><br><span class="line"><span class="keyword">update</span>    <span class="keyword">Update</span> configuration <span class="keyword">of</span> one <span class="keyword">or</span> more containers</span><br><span class="line"><span class="keyword">version</span>   <span class="keyword">Show</span> the Docker <span class="keyword">version</span> information</span><br><span class="line">volume    Manage Docker volumes</span><br><span class="line"><span class="keyword">wait</span>      <span class="keyword">Block</span> <span class="keyword">until</span> a <span class="keyword">container</span> stops, <span class="keyword">then</span> print its <span class="keyword">exit</span> code</span><br></pre></td></tr></table></figure><h2 id="subcommand"><a href="#subcommand" class="headerlink" title="subcommand"></a>subcommand</h2><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">    --add-host value              Add a <span class="keyword">custom</span> host-<span class="keyword">to</span>-IP mapping (host:ip) (<span class="keyword">default</span> [])</span><br><span class="line">    -a, --attach value                Attach <span class="keyword">to</span> STDIN, STDOUT <span class="keyword">or</span> STDERR (<span class="keyword">default</span> [])</span><br><span class="line">    --blkio-weight value          Block IO (relative weight), between <span class="number">10</span> <span class="keyword">and</span> <span class="number">1000</span></span><br><span class="line">    --blkio-weight-device value   Block IO weight (relative device weight) (<span class="keyword">default</span> [])</span><br><span class="line">    --cap-add value               Add Linux capabilities (<span class="keyword">default</span> [])</span><br><span class="line">    --cap-drop value              Drop Linux capabilities (<span class="keyword">default</span> [])</span><br><span class="line">    --cgroup-parent <span class="built_in">string</span>        <span class="keyword">Optional</span> parent cgroup <span class="keyword">for</span> the container</span><br><span class="line">    --cidfile <span class="built_in">string</span>              Write the container ID <span class="keyword">to</span> the file</span><br><span class="line">    --cpu-percent int             CPU percent (Windows only)</span><br><span class="line">    --cpu-period int              Limit CPU CFS (Completely Fair Scheduler) period</span><br><span class="line">    --cpu-quota int               Limit CPU CFS (Completely Fair Scheduler) quota</span><br><span class="line">-c, --cpu-shares int              CPU shares (relative weight)</span><br><span class="line">    --cpuset-cpus <span class="built_in">string</span>          CPUs <span class="keyword">in</span> which <span class="keyword">to</span> allow execution (<span class="number">0</span><span class="number">-3</span>, <span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">    --cpuset-mems <span class="built_in">string</span>          MEMs <span class="keyword">in</span> which <span class="keyword">to</span> allow execution (<span class="number">0</span><span class="number">-3</span>, <span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">-d, --detach                      Run container <span class="keyword">in</span> background <span class="keyword">and</span> print container ID</span><br><span class="line">    --detach-keys <span class="built_in">string</span>          Override the <span class="keyword">key</span> sequence <span class="keyword">for</span> detaching a container</span><br><span class="line">    --device value                Add a host device <span class="keyword">to</span> the container (<span class="keyword">default</span> [])</span><br><span class="line">    --device-read-bps value       Limit read rate (bytes per second) <span class="keyword">from</span> a device (<span class="keyword">default</span> [])</span><br><span class="line">    --device-read-iops value      Limit read rate (IO per second) <span class="keyword">from</span> a device (<span class="keyword">default</span> [])</span><br><span class="line">    --device-write-bps value      Limit write rate (bytes per second) <span class="keyword">to</span> a device (<span class="keyword">default</span> [])</span><br><span class="line">    --device-write-iops value     Limit write rate (IO per second) <span class="keyword">to</span> a device (<span class="keyword">default</span> [])</span><br><span class="line">    --disable-content-trust       <span class="keyword">Skip</span> image verification (<span class="keyword">default</span> <span class="literal">true</span>)</span><br><span class="line">    --dns value                   <span class="keyword">Set</span> <span class="keyword">custom</span> DNS servers (<span class="keyword">default</span> [])</span><br><span class="line">    --dns-opt value               <span class="keyword">Set</span> DNS options (<span class="keyword">default</span> [])</span><br><span class="line">    --dns-search value            <span class="keyword">Set</span> <span class="keyword">custom</span> DNS search domains (<span class="keyword">default</span> [])</span><br><span class="line">    --entrypoint <span class="built_in">string</span>           Overwrite the <span class="keyword">default</span> ENTRYPOINT <span class="keyword">of</span> the image</span><br><span class="line">-e, --env value                   <span class="keyword">Set</span> environment variables (<span class="keyword">default</span> [])</span><br><span class="line">    --env-file value              Read <span class="keyword">in</span> a file <span class="keyword">of</span> environment variables (<span class="keyword">default</span> [])</span><br><span class="line">    --expose value                Expose a port <span class="keyword">or</span> a range <span class="keyword">of</span> ports (<span class="keyword">default</span> [])</span><br><span class="line">    --<span class="keyword">group</span>-add value             Add additional groups <span class="keyword">to</span> <span class="keyword">join</span> (<span class="keyword">default</span> [])</span><br><span class="line">    --health-cmd <span class="built_in">string</span>           Command <span class="keyword">to</span> run <span class="keyword">to</span> check health</span><br><span class="line">    --health-interval duration    Time between running the check</span><br><span class="line">    --health-retries int          Consecutive failures needed <span class="keyword">to</span> report unhealthy</span><br><span class="line">    --health-timeout duration     Maximum time <span class="keyword">to</span> allow one check <span class="keyword">to</span> run</span><br><span class="line">    --help                        Print usage</span><br><span class="line">-h, --hostname <span class="built_in">string</span>             Container host name</span><br><span class="line">-i, --interactive                 Keep STDIN open even <span class="keyword">if</span> <span class="keyword">not</span> attached</span><br><span class="line">    --io-maxbandwidth <span class="built_in">string</span>      Maximum IO bandwidth limit <span class="keyword">for</span> the system drive (Windows only)</span><br><span class="line">    --io-maxiops uint             Maximum IOps limit <span class="keyword">for</span> the system drive (Windows only)</span><br><span class="line">    --ip <span class="built_in">string</span>                   Container IPv4 address (e.g. <span class="number">172.30</span><span class="number">.100</span><span class="number">.104</span>)</span><br><span class="line">    --ip6 <span class="built_in">string</span>                  Container IPv6 address (e.g. <span class="number">2001</span>:db8::<span class="number">33</span>)</span><br><span class="line">    --ipc <span class="built_in">string</span>                  IPC <span class="keyword">namespace</span> <span class="keyword">to</span> use</span><br><span class="line">    --isolation <span class="built_in">string</span>            Container isolation technology</span><br><span class="line">    --kernel-memory <span class="built_in">string</span>        Kernel memory limit</span><br><span class="line">-l, --label value                 <span class="keyword">Set</span> meta data <span class="keyword">on</span> a container (<span class="keyword">default</span> [])</span><br><span class="line">    --label-file value            Read <span class="keyword">in</span> a line delimited file <span class="keyword">of</span> labels (<span class="keyword">default</span> [])</span><br><span class="line">    --link value                  Add link <span class="keyword">to</span> another container (<span class="keyword">default</span> [])</span><br><span class="line">    --link-local-ip value         Container IPv4/IPv6 link-local addresses (<span class="keyword">default</span> [])</span><br><span class="line">    --log-driver <span class="built_in">string</span>           Logging driver <span class="keyword">for</span> the container</span><br><span class="line">    --log-opt value               Log driver options (<span class="keyword">default</span> [])</span><br><span class="line">    --mac-address <span class="built_in">string</span>          Container MAC address (e.g. <span class="number">92</span>:d0:c6:<span class="number">0</span>a:<span class="number">29</span>:<span class="number">33</span>)</span><br><span class="line">-m, --memory <span class="built_in">string</span>               Memory limit</span><br><span class="line">    --memory-reservation <span class="built_in">string</span>   Memory soft limit</span><br><span class="line">    --memory-swap <span class="built_in">string</span>          Swap limit equal <span class="keyword">to</span> memory plus swap: <span class="comment">'-1' to enable unlimited swap</span></span><br><span class="line">    --memory-swappiness int       Tune container memory swappiness (<span class="number">0</span> <span class="keyword">to</span> <span class="number">100</span>) (<span class="keyword">default</span> <span class="number">-1</span>)</span><br><span class="line">    --name <span class="built_in">string</span>                 Assign a name <span class="keyword">to</span> the container</span><br><span class="line">    --network <span class="built_in">string</span>              Connect a container <span class="keyword">to</span> a network (<span class="keyword">default</span> &amp;quot;<span class="keyword">default</span>&amp;quot;)</span><br><span class="line">    --network-<span class="keyword">alias</span> value         Add network-scoped <span class="keyword">alias</span> <span class="keyword">for</span> the container (<span class="keyword">default</span> [])</span><br><span class="line">    --no-healthcheck              Disable any container-specified HEALTHCHECK</span><br><span class="line">    --oom-kill-disable            Disable OOM Killer</span><br><span class="line">    --oom-score-adj int           Tune host<span class="comment">'s OOM preferences (-1000 to 1000)</span></span><br><span class="line">    --pid <span class="built_in">string</span>                  PID <span class="keyword">namespace</span> <span class="keyword">to</span> use</span><br><span class="line">    --pids-limit int              Tune container pids limit (<span class="keyword">set</span> <span class="number">-1</span> <span class="keyword">for</span> unlimited)</span><br><span class="line">    --privileged                  Give extended privileges <span class="keyword">to</span> this container</span><br><span class="line">-p, --publish value               Publish a container<span class="comment">'s port(s) to the host (default [])</span></span><br><span class="line">-P, --publish-all                 Publish all exposed ports <span class="keyword">to</span> random ports</span><br><span class="line">    --read-only                   Mount the container<span class="comment">'s root filesystem as read only</span></span><br><span class="line">    --restart <span class="built_in">string</span>              Restart policy <span class="keyword">to</span> apply <span class="keyword">when</span> a container exits (<span class="keyword">default</span> &amp;quot;no&amp;quot;)</span><br><span class="line">    --rm                          Automatically remove the container <span class="keyword">when</span> it exits</span><br><span class="line">    --runtime <span class="built_in">string</span>              Runtime <span class="keyword">to</span> use <span class="keyword">for</span> this container</span><br><span class="line">    --security-opt value          Security Options (<span class="keyword">default</span> [])</span><br><span class="line">    --shm-size <span class="built_in">string</span>             Size <span class="keyword">of</span> /dev/shm, <span class="keyword">default</span> value <span class="keyword">is</span> <span class="number">64</span>MB</span><br><span class="line">    --sig-proxy                   Proxy received signals <span class="keyword">to</span> the process (<span class="keyword">default</span> <span class="literal">true</span>)</span><br><span class="line">    --<span class="keyword">stop</span>-signal <span class="built_in">string</span>          Signal <span class="keyword">to</span> <span class="keyword">stop</span> a container, <span class="number">15</span> <span class="keyword">by</span> <span class="keyword">default</span> (<span class="keyword">default</span> &amp;quot;<span class="number">15</span>&amp;quot;)</span><br><span class="line">    --storage-opt value           Storage driver options <span class="keyword">for</span> the container (<span class="keyword">default</span> [])</span><br><span class="line">    --sysctl value                Sysctl options (<span class="keyword">default</span> map[])</span><br><span class="line">    --tmpfs value                 Mount a tmpfs directory (<span class="keyword">default</span> [])</span><br><span class="line">-t, --tty                         Allocate a pseudo-TTY</span><br><span class="line">    --ulimit value                Ulimit options (<span class="keyword">default</span> [])</span><br><span class="line">-u, --user <span class="built_in">string</span>                 Username <span class="keyword">or</span> UID (format: &amp;lt;name|uid&amp;gt;[:&amp;lt;<span class="keyword">group</span>|gid&amp;gt;])</span><br><span class="line">    --userns <span class="built_in">string</span>               User <span class="keyword">namespace</span> <span class="keyword">to</span> use</span><br><span class="line">    --uts <span class="built_in">string</span>                  UTS <span class="keyword">namespace</span> <span class="keyword">to</span> use</span><br><span class="line">-v, --volume value                Bind mount a volume (<span class="keyword">default</span> [])</span><br><span class="line">    --volume-driver <span class="built_in">string</span>        <span class="keyword">Optional</span> volume driver <span class="keyword">for</span> the container</span><br><span class="line">    --volumes-<span class="keyword">from</span> value          Mount volumes <span class="keyword">from</span> the specified container(s) (<span class="keyword">default</span> [])</span><br><span class="line">-w, --workdir <span class="built_in">string</span>              Working directory inside the container</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2 id=&quot;useful-command&quot;&gt;&lt;a href=&quot;#useful-command&quot; class=&quot;headerlink&quot; title=&quot;useful command&quot;&gt;&lt;/a&gt;useful command&lt;/h2&gt;&lt;figure class=&quot;highlight
        
      
    
    </summary>
    
      <category term="翻译Wiki" scheme="https://hualin.online/categories/%E7%BF%BB%E8%AF%91Wiki/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker+mailserver</title>
    <link href="https://hualin.online/dockermailserver/"/>
    <id>https://hualin.online/dockermailserver/</id>
    <published>2019-09-08T13:04:33.000Z</published>
    <updated>2019-09-10T01:53:02.760Z</updated>
    
    <content type="html"><![CDATA[<p>使用Ewomail搭建邮件服务器(需要纯洁系统环境) <a href="https://gitee.com/laowu5/EwoMail" target="_blank" rel="noopener">https://gitee.com/laowu5/EwoMail</a> <a href="https://gitee.com/laowu5/EwoMail.git" target="_blank" rel="noopener">https://gitee.com/laowu5/EwoMail.git</a> 后台管理端<a href="http://ip:8010" target="_blank" rel="noopener">http://ip:8010</a> 邮箱登录端<a href="http://IP:8000" target="_blank" rel="noopener">http://IP:8000</a> 使用docker运行mail容器: mkdir MailServer cd MailServer docker pull tvial/docker-mailserver:latest curl -o setup.sh <a href="https://raw.githubusercontent.com/tomav/docker-mailserver/master/setup.sh" target="_blank" rel="noopener">https://raw.githubusercontent.com/tomav/docker-mailserver/master/setup.sh</a>; chmod a+x ./setup.sh curl -o docker-compose.yml <a href="https://raw.githubusercontent.com/tomav/docker-mailserver/master/docker-compose.yml.dist" target="_blank" rel="noopener">https://raw.githubusercontent.com/tomav/docker-mailserver/master/docker-compose.yml.dist</a> curl -o .env <a href="https://raw.githubusercontent.com/tomav/docker-mailserver/master/.env.dist" target="_blank" rel="noopener">https://raw.githubusercontent.com/tomav/docker-mailserver/master/.env.dist</a> docker-compose up -d mail ./setup.sh email add &lt;user@domain&gt; [<password>] ./setup.sh config dkim 设置DNS域名解析: cat config/opendkim/keys/domain.tld/mail.txt 更新docker容器: docker-compose down docker pull tvial/docker-mailserver:latest docker-compose up -d mail 搭建邮箱服务器的方案: postfix dovecot postfix-admin(基本) iredmail, Ewomail(开源免费) sendcloud ,SendGrid、MailChimp、Amazon SES、SendCloud、Mailgun,Winmail、 Exchange、Mdaemon、Winwebmail、Imail、Coremail、U-Mail、TurboMail、iGENUS 、Icewarp、易邮、金笛、MagicMail等(收费)</password></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;使用Ewomail搭建邮件服务器(需要纯洁系统环境) &lt;a href=&quot;https://gitee.com/laowu5/EwoMail&quot; target=&quot;_blank&quot;
        
      
    
    </summary>
    
      <category term="docker" scheme="https://hualin.online/categories/docker/"/>
    
      <category term="Linux" scheme="https://hualin.online/categories/docker/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>Telnet Usage</title>
    <link href="https://hualin.online/telnet-usage/"/>
    <id>https://hualin.online/telnet-usage/</id>
    <published>2019-09-08T04:36:07.000Z</published>
    <updated>2019-09-14T09:59:15.483Z</updated>
    
    <content type="html"><![CDATA[<p>yum -y install telnet <br>login dovecot: <br>telnet 104.225.233.249 110 <br>USER xxx：输入用户名 <br>PASS xxx：输入密码 <br>LIST：显示信箱 <br>RETR n：打开第n封信 <br>exit telnet： ctl+] quit</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;yum -y install telnet &lt;br&gt;login dovecot: &lt;br&gt;telnet 104.225.233.249 110 &lt;br&gt;USER xxx：输入用户名 &lt;br&gt;PASS xxx：输入密码 &lt;br&gt;LIST：显示信箱 &lt;br&gt;RETR
        
      
    
    </summary>
    
      <category term="Linux" scheme="https://hualin.online/categories/Linux/"/>
    
      <category term="未分类" scheme="https://hualin.online/categories/Linux/%E6%9C%AA%E5%88%86%E7%B1%BB/"/>
    
    
  </entry>
  
  <entry>
    <title>Atom 使用技巧</title>
    <link href="https://hualin.online/atom-usage/"/>
    <id>https://hualin.online/atom-usage/</id>
    <published>2019-09-06T13:43:57.000Z</published>
    <updated>2019-09-14T09:59:10.200Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Atom-常用快捷键-Crtl-Shift-M-开启Markdown实时预览-Command-Shift-P-打开命令窗口，可以运行各种菜单功能-Command-T-快速多文件切换-Command-F-文件内查找和替换-Command-Shift-F-多文件查找和替换-Command-对选中内容向左缩进-Command-对选中内容向右缩进-Command-显示或隐藏目录树-Crtl-m-相应括号之间，html-tag之间等跳转-Crtl-Alt-B-格式化代码（需要安装atom-beautify）-Crtl-调起CLI命令行界面（需要安装terminal-panel）-常用插件-minimap：-预览全部代码-atom-beautify：-格式化代码-Ctrl-Alt-B进行格式化-emmet：-HTML-CSS-快速编写-autcomplete-×系列：-代码自动补全-autocompete-paths：-路径补全-autocompete-php：-PHP语言-pigments：-样式显示颜色-docblockr-快捷注释-JavaScript-snippets：-js缩写，自动补全-file-icons：-图片显示文件类型-常用主题-seti-ui-seti-syntax-atom-material-ui-atom-material-syntax"><a href="#Atom-常用快捷键-Crtl-Shift-M-开启Markdown实时预览-Command-Shift-P-打开命令窗口，可以运行各种菜单功能-Command-T-快速多文件切换-Command-F-文件内查找和替换-Command-Shift-F-多文件查找和替换-Command-对选中内容向左缩进-Command-对选中内容向右缩进-Command-显示或隐藏目录树-Crtl-m-相应括号之间，html-tag之间等跳转-Crtl-Alt-B-格式化代码（需要安装atom-beautify）-Crtl-调起CLI命令行界面（需要安装terminal-panel）-常用插件-minimap：-预览全部代码-atom-beautify：-格式化代码-Ctrl-Alt-B进行格式化-emmet：-HTML-CSS-快速编写-autcomplete-×系列：-代码自动补全-autocompete-paths：-路径补全-autocompete-php：-PHP语言-pigments：-样式显示颜色-docblockr-快捷注释-JavaScript-snippets：-js缩写，自动补全-file-icons：-图片显示文件类型-常用主题-seti-ui-seti-syntax-atom-material-ui-atom-material-syntax" class="headerlink" title="Atom ## 常用快捷键 + Crtl+Shift+M 开启Markdown实时预览 + Command+Shift+P 打开命令窗口，可以运行各种菜单功能 + Command + T 快速多文件切换 + Command + F 文件内查找和替换 + Command + Shift + F 多文件查找和替换 + Command + [ 对选中内容向左缩进 + Command + ] 对选中内容向右缩进 + Command + 显示或隐藏目录树 + Crtl + m 相应括号之间，html tag之间等跳转 + Crtl + Alt + B 格式化代码（需要安装atom-beautify） + Crtl + ` 调起CLI命令行界面（需要安装terminal-panel） ## 常用插件 + minimap： 预览全部代码 + atom-beautify： 格式化代码 Ctrl+Alt+B进行格式化 + emmet： HTML CSS 快速编写 + autcomplete-×系列： 代码自动补全 - autocompete-paths： 路径补全 - autocompete-php： PHP语言 + pigments： 样式显示颜色 + docblockr: 快捷注释 + JavaScript-snippets： js缩写，自动补全 + file-icons： 图片显示文件类型 ## 常用主题 + seti-ui + seti-syntax + atom-material-ui + atom-material-syntax"></a>Atom ## 常用快捷键 + Crtl+Shift+M 开启Markdown实时预览 + Command+Shift+P 打开命令窗口，可以运行各种菜单功能 + Command + T 快速多文件切换 + Command + F 文件内查找和替换 + Command + Shift + F 多文件查找和替换 + Command + [ 对选中内容向左缩进 + Command + ] 对选中内容向右缩进 + Command + 显示或隐藏目录树 + Crtl + m 相应括号之间，html tag之间等跳转 + Crtl + Alt + B 格式化代码（需要安装atom-beautify） + Crtl + ` 调起CLI命令行界面（需要安装terminal-panel） ## 常用插件 + minimap： 预览全部代码 + atom-beautify： 格式化代码 Ctrl+Alt+B进行格式化 + emmet： HTML CSS 快速编写 + autcomplete-×系列： 代码自动补全 - autocompete-paths： 路径补全 - autocompete-php： PHP语言 + pigments： 样式显示颜色 + docblockr: 快捷注释 + JavaScript-snippets： js缩写，自动补全 + file-icons： 图片显示文件类型 ## 常用主题 + seti-ui + seti-syntax + atom-material-ui + atom-material-syntax</h2>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;h2
        
      
    
    </summary>
    
      <category term="Codes" scheme="https://hualin.online/categories/Codes/"/>
    
    
  </entry>
  
</feed>
